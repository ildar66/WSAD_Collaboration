<?xml version="1.0" encoding="UTF-8"?>
<templates><template context="java" description="iterate over array" enabled="true" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${cursor}
}</template><template context="java" description="iterate over array w/ temporary variable" enabled="true" name="for">for (int ${index} = 0; ${index} &lt; ${array}.length; ${index}++) {
	${array_type} ${array_element} = ${array}[${index}];
	${cursor}
}</template><template context="java" description="iterate over collection" enabled="true" name="for">for (Iterator ${iterator} = ${collection}.iterator(); ${iterator}.hasNext(); ) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template><template context="java" description="iterate with enumeration" enabled="true" name="while">while (${enumeration}.hasMoreElements()) {
	${type} ${element} = (${type}) ${enumeration}.nextElement();
	${cursor}
}</template><template context="java" description="iterate with iterator" enabled="true" name="while">while (${iterator}.hasNext()) {
	${type} ${element} = (${type}) ${iterator}.next();
	${cursor}
}</template><template context="java" description="do while statement" enabled="true" name="do">do {
	${cursor}
} while (${condition});</template><template context="java" description="switch case statement" enabled="true" name="switch">switch (${key}) {
	case ${value}:
		${cursor}
		break;

	default:
		break;
}</template><template context="java" description="if statement" enabled="true" name="if">if (${condition}) {
	${cursor}
}</template><template context="java" description="if else statement" enabled="true" name="ifelse">if (${condition}) {
	${cursor}
} else {
	
}</template><template context="java" description="else if block" enabled="true" name="elseif">else if (${condition}) {
	${cursor}
}</template><template context="java" description="else block" enabled="true" name="else">else {
	${cursor}
}</template><template context="java" description="try catch block" enabled="true" name="try">try {
	${cursor}
} catch (${Exception} e) {
}</template><template context="java" description="catch block" enabled="true" name="catch">catch (${Exception} e) {
	${cursor}
}</template><template context="java" description="main method" enabled="true" name="main">public static void main(String[] args) {
	${cursor}
}</template><template context="java" description="public method" enabled="true" name="public_method">public ${return_type} ${name}(${arguments}) {
	${cursor}
}</template><template context="java" description="protected method" enabled="true" name="protected_method">protected ${return_type} ${name}(${arguments}) {
	${cursor}
}</template><template context="java" description="private method" enabled="true" name="private_method">private ${return_type} ${name}(${arguments}) {
	${cursor}
}</template><template context="java" description="private static method" enabled="true" name="private_static_method">private static ${return_type} ${name}(${arguments}) {
	${cursor}
}</template><template context="java" description="dynamic type test and cast" enabled="true" name="instanceof">if (${name} instanceof ${type}) {
	${type} ${new_name} = (${type})${name};
	${cursor}
}</template><template context="java" description="dynamic cast" enabled="true" name="cast">${type} ${new_name} = (${type}) ${name};</template><template context="java" description="create new object" enabled="true" name="new">${type} ${name} = new ${type}(${arguments});</template><template context="java" description="lazy creation" enabled="true" name="lazy">if (${name} == null) {
	${name} = new ${type}(${arguments});
	${cursor}
}

return ${name};</template><template context="java" description="convert collection to array" enabled="true" name="toarray">(${type}[]) ${collection}.toArray(new ${type}[${collection}.size()]);</template><template context="java" description="file comment used by the class and interface wizards" enabled="true" name="filecomment">/**
 * Created on ${date}
 *
 * To change this generated comment edit the template variable &quot;filecomment&quot;:
 * Window&gt;Preferences&gt;Java&gt;Templates.
 * To enable and disable the creation of file comments go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation.
 */</template><template context="java" description="type comment used by the class and interface wizards" enabled="true" name="typecomment">/**
 * @author ${user}
 *
 * To change this generated comment edit the template variable &quot;typecomment&quot;:
 * Window&gt;Preferences&gt;Java&gt;Templates.
 * To enable and disable the creation of type comments go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation.
 */</template><template context="java" description="print to standard out" enabled="true" name="stdout">System.out.println(${cursor});</template><template context="java" description="print to standard error" enabled="true" name="stderr">System.err.println(${cursor});</template><template context="javadoc" description="&lt;code&gt;&lt;/code&gt;" enabled="true" name="&lt;code&gt;">&lt;code&gt;${cursor}&lt;/code&gt;</template><template context="javadoc" description="&lt;code&gt;null&lt;/code&gt;" enabled="true" name="&lt;code&gt;">&lt;code&gt;null&lt;/code&gt;</template><template context="javadoc" description="&lt;pre&gt;&lt;/pre&gt;" enabled="true" name="&lt;pre&gt;">&lt;pre&gt;${cursor}&lt;/pre&gt;</template><template context="javadoc" description="&lt;b&gt;&lt;/b&gt;" enabled="true" name="&lt;b&gt;">&lt;b&gt;${cursor}&lt;/b&gt;</template><template context="javadoc" description="&lt;i&gt;&lt;/i&gt;" enabled="true" name="&lt;i&gt;">&lt;i&gt;${cursor}&lt;/i&gt;</template><template context="javadoc" description="author name" enabled="true" name="@author">@author Shafigullin Ildar</template></templates>