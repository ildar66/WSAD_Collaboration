# IBM Confidential OCO Source Material
# 5639-D57, 5630-A36, 5630-A37, 5724-D18 (C) COPYRIGHT International Business Machines Corp. 1997, 2002
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited with the
# U.S. Copyright Office.
#
#==================================================================================================
#
# TRANSLATION / TRANSLATOR NOTES:
#
# Whenever an apostrophe is needed within this file, please do not double it. It has
# been determined that the code that uses this file expects only a single
# apostrophe, and should work properly when a single apostrophe is provided.
#
#==================================================================================================
#
# DEVELOPER NOTES:
#
# This file has been modified to follow the WebSphere Message Guidelines.
# For more information, visit:
#   http://seaux.raleigh.ibm.com/g11n/was/seae/45/messages/index.html
# or contact Dennis Hebert/Raleigh/IBM (hebert@us.ibm.com)
#
# cmvc_en_version_level=1.77.2.6,6,03/09/08,15:55:32
#
#CMVCPATHNAME ws/code/webui.securitycenter/src/securitycenter/WEB-INF/plugin.nlsprops
#ISMESSAGEFILE TRUE
#COMPONENTPREFIX SECG
#COMPONENTNAMEFOR SECG WebUI SecurityCenter

nav.user.registry.localos=Local OS
nav.user.registry.ldap=LDAP
nav.user.registry.custom=Custom

nav.jaas.application=Application Logins
nav.jaas.j2c=J2C Authentication Data

nav.auth.csi.auth.in=CSIv2 Inbound Authentication
nav.auth.csi.auth.out=CSIv2 Outbound Authentication
nav.auth.csi.trans.in=CSIv2 Inbound Transport
nav.auth.csi.trans.out=CSIv2 Outbound Transport
nav.auth.ibm.trans.in=SAS Inbound Transport
nav.auth.ibm.trans.out=SAS Outbound Transport

nav.ssl=SSL

Security.SecurityCenter.displayName=Security

SecureSocketLayer.displayName=Secure Socket Layer (SSL)
SecureSocketLayer.description=Specifies configuration settings related to secure socket layer (SSL).
SecureSocketLayer.smallIcon=SecureSocketLayer.gif
SecureSocketLayer.largeIcon=SecureSocketLayer32X32.gif
SecureSocketLayer.cryptoHardware.displayName=Cryptographic Token
SecureSocketLayer.cryptoHardware.description=Specifies information about the cryptographic tokens related to SSL support.
SecureSocketLayer.properties.displayName=Custom Properties
SecureSocketLayer.properties.description=Specifies arbitrary name/value pairs of data, where the name is a property key and the value is a string value which can be used to set internal system configuration properties.
SecureSocketLayer.keyFileName.displayName=Key File Name
SecureSocketLayer.keyFileName.description=The fully qualified path to the key file that contains public keys and perhaps private keys.
SecureSocketLayer.keyFilePassword.displayName=Key File Password
SecureSocketLayer.keyFilePassword.description=The password for accessing the key file.
SecureSocketLayer.keyFileFormat.displayName=Key File Format
SecureSocketLayer.keyFileFormat.description=The format of the key file.
SecureSocketLayer.trustFileName.displayName=Trust File Name
SecureSocketLayer.trustFileName.description=The fully qualified path to a trust file containing the public keys.
SecureSocketLayer.trustFilePassword.displayName=Trust File Password
SecureSocketLayer.trustFilePassword.description=A password for accessing the trust file.
SecureSocketLayer.trustFileFormat.displayName=Trust File Format
SecureSocketLayer.trustFileFormat.description=The format of the trust file.
SecureSocketLayer.clientAuthentication.displayName=Client Authentication
SecureSocketLayer.clientAuthentication.description=Client authentication is supported by the CSIv2 authentication protocol only.
SecureSocketLayer.securityLevel.displayName=Security Level
SecureSocketLayer.securityLevel.description=Selects from a preconfigured set of security levels.
SecureSocketLayer.cipherSuites.displayName=Cipher Suites
SecureSocketLayer.cipherSuites.description=When specified, overrides the setting of Security Level.
SecureSocketLayer.enableCryptoHardwareSupport.displayName=Cryptographic Token
SecureSocketLayer.enableCryptoHardwareSupport.description=Enables/disables crypto hardware support.
SecureSocketLayer.provider.displayName=Provider
SecureSocketLayer.provider.description=The provider refers to a package that supplies a concrete implementation of a subset of the cryptography aspects of the Java Security API. The first button is a list with predefined values of IBM's JSSE providers. IBMJSSEFIPS is the FIPS approved version of the IBMJSSE provider. The second button is used so specify a custom provider. Note that Cipher Suites and Protocol values depend on the Provider. For a custom provider, the Cipher Suites must initially be entered through the Custom Properties panel below.
SecureSocketLayer.provider.predefined=Predefined JSSE provider
SecureSocketLayer.provider.predefined.select=Select provider
SecureSocketLayer.provider.custom=Custom JSSE provider
SecureSocketLayer.provider.custom.select=Custom provider
SecureSocketLayer.provider.IBMJSSE=IBMJSSE
SecureSocketLayer.provider.IBMJSSEFIPS=IBMJSSEFIPS
SecureSocketLayer.protocol.displayName=Protocol
SecureSocketLayer.protocol.description=Specifies the SSL protocol to be used.
SecureSocketLayer.protocol.SSL=SSL
SecureSocketLayer.protocol.SSLv2=SSLv2
SecureSocketLayer.protocol.SSLv3=SSLv3
SecureSocketLayer.protocol.TLS=TLS
SecureSocketLayer.protocol.TLSV1=TLSV1

SecureSocketLayer.button.add=Add >>
SecureSocketLayer.button.remove=<< Remove
SecureSocketLayer.availableCiphers.displayName=Available Ciphers
SecureSocketLayer.selectedCiphers.displayName=Selected Ciphers
SSL_RSA_WITH_RC4_128_MD5=SSL_RSA_WITH_RC4_128_MD5
SSL_RSA_WITH_RC4_128_SHA=SSL_RSA_WITH_RC4_128_SHA
SSL_RSA_WITH_DES_CBC_SHA=SSL_RSA_WITH_DES_CBC_SHA
SSL_RSA_WITH_3DES_EDE_CBC_SHA=SSL_RSA_WITH_3DES_EDE_CBC_SHA
SSL_DHE_RSA_WITH_DES_CBC_SHA=SSL_DHE_RSA_WITH_DES_CBC_SHA
SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA=SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
SSL_DHE_DSS_WITH_DES_CBC_SHA=SSL_DHE_DSS_WITH_DES_CBC_SHA
SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA=SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
SSL_RSA_EXPORT_WITH_RC4_40_MD5=SSL_RSA_EXPORT_WITH_RC4_40_MD5
SSL_RSA_EXPORT_WITH_DES40_CBC_SHA=SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5=SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5
SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA=SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA=SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
SSL_RSA_WITH_NULL_MD5=SSL_RSA_WITH_NULL_MD5
SSL_RSA_WITH_NULL_SHA=SSL_RSA_WITH_NULL_SHA
SSL_DH_anon_WITH_RC4_128_MD5=SSL_DH_anon_WITH_RC4_128_MD5
SSL_DH_anon_WITH_DES_CBC_SHA=SSL_DH_anon_WITH_DES_CBC_SHA
SSL_DH_anon_WITH_3DES_EDE_CBC_SHA=SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
SSL_DH_anon_EXPORT_WITH_RC4_40_MD5=SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA=SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA

KeyFileFormatKind.JKS=JKS
KeyFileFormatKind.PKCS12=PKCS12
KeyFileFormatKind.JCEK=JCEK
SSLSecurityLevel.HIGH=HIGH
SSLSecurityLevel.MEDIUM=MEDIUM
SSLSecurityLevel.LOW=LOW
CryptoHardwareToken.displayName=Cryptographic Token
CryptoHardwareToken.description=A crypto token is a hardware or software device with a built-in key store implementation.
CryptoHardwareToken.smallIcon=CryptoHardwareToken.gif
CryptoHardwareToken.largeIcon=CryptoHardwareToken32X32.gif
CryptoHardwareToken.tokenType.displayName=Token Type
CryptoHardwareToken.tokenType.description=The type of token, such as PKCS#11.
CryptoHardwareToken.libraryFile.displayName=Library File
CryptoHardwareToken.libraryFile.description=The DLL or shared object which implements the interface to the cryptographic device.
CryptoHardwareToken.password.displayName=Password
CryptoHardwareToken.password.description=The password for the cryptographic device.
JAASLoginModule.displayName=JAAS Login Modules
JAASLoginModule.description=Each entry in the Login Configuration must contain at least one Login Module. However, more than one Login Module can be defined for a Login Configuration. If more than one Login Module is defined for a Login Configuration, they will be processed in the order that they are defined.
JAASLoginModule.smallIcon=JAASLoginModule.gif
JAASLoginModule.largeIcon=JAASLoginModule32X32.gif
JAASLoginModule.options.displayName=Custom Properties
JAASLoginModule.options.description=Here the Custom Properties are used to define Module Options that are in a space separated list of Login Module-specific values which are passed directly to the underlying Login Modules. Options are defined by the Login Module itself, and control the behavior within it. For example, a Login Module may define options to support debugging/testing capabilities. The correct way to specify options in the configuration is by using the following key-value pairing: debug=true. The key and value should be separated by an equal sign. Note that there is no limit to the number of options that a Login Module can define.
JAASLoginModule.moduleClassName.displayName=Module Classname
JAASLoginModule.moduleClassName.description=The class name of the given Login Module.
JAASLoginModule.authenticationStrategy.displayName=Authentication Strategy
JAASLoginModule.authenticationStrategy.description=Specifies the behavior as authentication proceeds down the stack of Login Modules.
JAASModuleControlFlag.REQUIRED=REQUIRED
JAASModuleControlFlag.REQUISITE=REQUISITE
JAASModuleControlFlag.SUFFICIENT=SUFFICIENT
JAASModuleControlFlag.OPTIONAL=OPTIONAL
JAASConfigurationEntry.displayName=JAAS Configuration Entry
JAASConfigurationEntry.description=Define Login Configurations used by JAAS. Please do not remove ClientContainer, DefaultPrincipalMapping and WSLogin login configurations because they might be used by other applications. If they are removed, other applications may fail.
JAASConfigurationEntry.smallIcon=JAASConfigurationEntry.gif
JAASConfigurationEntry.largeIcon=JAASConfigurationEntry32X32.gif
JAASConfigurationEntry.loginModules.displayName=JAAS Login Modules
JAASConfigurationEntry.loginModules.description=Each entry in the Login Configuration must contain at least one Login Module. However, more than one Login Module can be defined for a Login Configuration. If more than one Login Module is defined for a Login Configuration, they will be processed in the order that they are defined.
JAASConfigurationEntry.alias.displayName=Alias
JAASConfigurationEntry.alias.description=The alias name of the application login.
JAASAuthData.displayName=JAAS Authentication Data
JAASAuthData.description=Specifies a list of userid and password for use by Java 2 Connector security.
JAASAuthData.smallIcon=JAASAuthData.gif
JAASAuthData.largeIcon=JAASAuthData32X32.gif
JAASAuthData.alias.displayName=Alias
JAASAuthData.alias.description=Specifies the name of the authentication data entry.
JAASAuthData.userId.displayName=User ID
JAASAuthData.userId.description=Specifies the J2C authentication data user ID.
JAASAuthData.password.displayName=Password
JAASAuthData.password.description=Specifies the password to use for the target Enterprise Information System.
JAASAuthData.description.displayName=Description
JAASAuthData.description.description=Specifies an optional description of the authentication data entry.  For example, this authentication data entry is used to connect to DB2.
JAASConfiguration.displayName=JAAS Configuration
JAASConfiguration.description=
JAASConfiguration.smallIcon=JAASConfiguration.gif
JAASConfiguration.largeIcon=JAASConfiguration32X32.gif
JAASConfiguration.entries.displayName=Entries
JAASConfiguration.entries.description=Specifies a list of javax.security.auth.login.AppConfigurationEntry.
MessageLayer.isStateful.displayName=Is Stateful
MessageLayer.isStateful.description=When enabled, stateful sessions are established for secure association between client and server.
IdentityAssertionLayer.trustedServers.displayName=Trusted Servers
IdentityAssertionLayer.trustedServers.description=Specifies a comma-separated list of server user IDs, which are trusted to perform identity assertion to this server.
CommonSecureInterop.displayName=Common Secure Interop
CommonSecureInterop.description=
CommonSecureInterop.smallIcon=CommonSecureInterop.gif
CommonSecureInterop.largeIcon=CommonSecureInterop32X32.gif
IdentityAssertionType.ITTPrincipal=ITT Principal

SecurityS.enabled.description=When unchecked, disables security at the server level.  Security can only be enabled at the server level when global security is also enabled.
SecurityS.enforceJava2Security.description=When checked, WebSphere will enforce Java 2 Security permission checking at the server level. When unchecked, WebSphere Java 2 Server Level Security Manager will not be installed and all Java 2 Security permission checking is disabled at the server level.
SecurityS.useDomainQualifiedUserNames.description=When checked, user IDs returned by getUserPrincipal()-like calls will be qualified with the server level security domain they reside within.
SecurityS.cacheTimeout.description=Timeout value for server level security cache in seconds.  Default value is 600 seconds.  One should avoid to set cache timeout value to 30 seconds or less.
SecurityS.issuePermissionWarning.description=When checked for server level security, a warning will be issued during application installation if an application requires a Java 2 Permission that normally should not be granted to an application.  The filter.policy file contains a list of permissions that an application should not have according to J2EE 1.3 Specification.
SecurityS.activeProtocol.description=Specifies active server level security authentication protocol when server level security is enabled. Possible values are CSI (CSIv2), CSI and SAS.
SecurityS.defaultSSLSettings.description=Use the Default SSL Settings to centrally manage SSL settings for resources in the server level security.

IIOPSecurityProtocolKind.IBM=SAS
IIOPSecurityProtocolKind.CSI=CSI
IIOPSecurityProtocolKind.BOTH=CSI and SAS
Security.displayName=Global Security
Security.description=Specifies global security configuration for a managed domain. The following steps are required to turn on security. 1) Select the desired User Registry from the left navigation panel and set the properties in that panel. 2) Enable security in this panel.
Security.smallIcon=Security.gif
Security.largeIcon=Security32X32.gif
Security.activeAuthMechanism.displayName=Active Authentication Mechanism
Security.activeAuthMechanism.description=Specifies the active authentication mechanism when security is enabled.
Security.activeAuthMechanism.SWAMAuthentication.displayName=SWAM (Simple WebSphere Authentication Mechanism)
Security.activeAuthMechanism.LTPA.displayName=LTPA (Light weight Third Party Authentication)
Security.activeAuthMechanism.CustomAuthMechanism.displayName=Custom
Security.authMechanisms.displayName=Authentication Mechanisms
Security.authMechanisms.description=Specifies a list of authentication mechanisms configured in the system.  Only one of the authentication mechanisms may be active in the system at a time (see activeAuthMechanism).
Security.authMechanisms.SWAMAuthentication.displayName=SWAM Authentications
Security.authMechanisms.LTPA.displayName=LTPAs
Security.authMechanisms.CustomAuthMechanism.displayName=Custom Authentication Mechanisms
Security.userRegistries.displayName=User Registries
Security.userRegistries.description=The configuration for a registry of users defined in the system.  There may many types of user registries.  User registry configuration is required at the time that sercurity configuration is enabled.  The default type of user registry is Local Operating System (because the default authentication mechanism is LocalOSAuthentication).
Security.userRegistries.LocalOSUserRegistry.displayName=Local OS User Registries
Security.userRegistries.LDAPUserRegistry.displayName=LDAP User Registries
Security.userRegistries.CustomUserRegistry.displayName=Custom User Registries
Security.activeUserRegistry.displayName=Active User Registry
Security.activeUserRegistry.description=Specifies the active user registry when security is enabled.
Security.activeUserRegistry.LocalOSUserRegistry.displayName=Local OS
Security.activeUserRegistry.LDAPUserRegistry.displayName=LDAP
Security.activeUserRegistry.CustomUserRegistry.displayName=Custom
Security.authConfig.displayName=Authentication Configuration
Security.authConfig.description=
Security.applicationLoginConfig.displayName=Application Login Configuration
Security.applicationLoginConfig.description=Specifies a list of JAAS login configuration to be used by application code including EJBs, JSPs, Servlets, and Resource Adpapters.
Security.CSI.displayName=CSI
Security.CSI.description=Specifies configuration of the OMG CSIv2 security protocol.
Security.IBM.displayName=SAS
Security.IBM.description=Specifies configuration of the IBM SAS security protocol that is used by WebSphere 3.x and 4.x application server products.
Security.repertoire.displayName=SSL Configuration Repertoires
Security.repertoire.description=Specifies a list of SSL configurations.
Security.systemLoginConfig.displayName=System Login Configuration
Security.systemLoginConfig.description=Specifies a list of JAAS login configuration to be used by system resources including authentication mechanism and principal and credential mapping.
Security.authDataEntries.displayName=J2C Authentication Data Entries
Security.authDataEntries.description=Specifies a list of userid and password for use by Java 2 Connector security.
Security.defaultSSLSettings.displayName=Default SSL Settings
Security.defaultSSLSettings.description=Applies the default SSL configuration to the entire administrative domain.
Security.authorizationTableImpl.displayName=Authorization Table Impl
Security.authorizationTableImpl.description=
Security.roleBasedAuthorization.displayName=Role Based Authorization
Security.roleBasedAuthorization.description=Specifies a list of system components that use the generalized Role Based Authorization for access control.
Security.useLocalSecurityServer.displayName=Use Local Security Server
Security.useLocalSecurityServer.description=Specifies whether an application server should uses a local instance of security server or to use the security server in the node agent on the local node, on a remote node, or in cell manager, in that order.
Security.useDomainQualifiedUserNames.displayName=Use Domain Qualified User IDs
Security.useDomainQualifiedUserNames.description=When true, user names returned by methods such as getUserPrincipal() will be qualified with the security domain in which they reside.
Security.enabled.displayName=Enabled
Security.enabled.description=Enables security for this WebSphere domain.
Security.cacheTimeout.displayName=Cache Timeout
Security.cacheTimeout.description=Timeout value for security cache in seconds.
Security.issuePermissionWarning.displayName=Issue Permission Warning
Security.issuePermissionWarning.description=When enabled, a warning will be issued during application installation, if an application requires a Java 2 Permission that normally should not be granted to an application.
Security.activeProtocol.displayName=Active Protocol
Security.activeProtocol.description=Specifies the active security authentication protocol when security is enabled. Possible values are CSI (CSIv2), or CSI and SAS.
Security.useFIPS.displayName=Use FIPS
Security.useFIPS.description=This will enable the use of FIPS (Federal Information Processing Standard) approved cryptographic algorithms. Note that setting this flag does not automatically change the existing JSSE provider in the Secure Socket Layer configuration. Also note that a FIPS approved JSSE provider only allows TLS as the protocol.
Security.useFIPS.backup.description=This will enable the use of FIPS (Federal Information Processing Standard) approved cryptographic algorithms. Note that setting this flag does not automatically change the existing JSSE provider in the Secure Socket Layer configuration. Also note that a FIPS approved JSSE provider only allows TLS as the protocol. Moreover, the FIPS approved LTPA authentication mechanism is not backward compatible with the non-FIPS approved LTPA implementation that is used in all prior versions of WebSphere Application Server products.

Security.property.displayName=Custom Properties
Security.property.description=Specifies arbitrary name/value pairs of data, where the name is a property key and the value is a string value which can be used to set internal system configuration properties.
Security.property.detail.description=Specifies an arbitrary name/value pair of data, where the name is a property key and the value is a string value which can be used to set internal system configuration properties.
Security.property.smallIcon=Property.gif
Security.property.largeIcon=Property32X32.gif
Security.property.name.displayName=Name
Security.property.name.description=The name of the property.
Security.property.value.displayName=Value
Security.property.value.description=A string value which can be used to set this property.
Security.property.description.displayName=Description
Security.property.description.description=An optional description for this property value
Security.property.required.displayName=Required
Security.property.required.description=An optional attribute which specifies whether this property is required to have a value.
Security.property.validationExpression.displayName=Validation Expression
Security.property.validationExpression.description=The console or other tools use this value to validate the contents of the value of this property.
Security.enforceJava2Security.displayName=Enforce Java 2 Security
Security.enforceJava2Security.description=If Java 2 Security is enabled and the application policy file is not set up correctly, the application may fail to run.
Security.updateRuntime=Update Runtime

AuthMechanism.displayName=Authentication Mechanism
AuthMechanism.description=Represents a type of security authentication mechanism.
AuthMechanism.smallIcon=AuthMechanism.gif
AuthMechanism.largeIcon=AuthMechanism32X32.gif
AuthMechanism.trustAssociation.displayName=Trust Association
AuthMechanism.trustAssociation.description=Enable Trust Association. Trust Association is used to connect reversed proxies to Websphere.
AuthMechanism.singleSignon.displayName=Single Signon (SSO)
AuthMechanism.singleSignon.description=Specifies the configuration values for single sign-on.
AuthMechanism.properties.displayName=Properties
AuthMechanism.properties.description=
AuthMechanism.OID.displayName=OID
AuthMechanism.OID.description=A GSS-unique identifier for a security mechanism.  For example, "1.3.18.0.2.30.2" for ibm-LTPA
AuthMechanism.isCredentialForwardable.displayName=Is Credential Forwardable
AuthMechanism.isCredentialForwardable.description=
AuthMechanism.authContextImplClass.displayName=Authentication Context Impl Class
AuthMechanism.authContextImplClass.description=
AuthMechanism.authConfig.displayName=Authentication Configuration
AuthMechanism.authConfig.description=
AuthMechanism.simpleAuthConfig.displayName=Simple Authentication Configuration
AuthMechanism.simpleAuthConfig.description=
AuthMechanism.authValidationConfig.displayName=Authentication Validation Configuration
AuthMechanism.authValidationConfig.description=
UserRegistry.displayName=User Registry
UserRegistry.description=A registry which maintains subjects (users and groups) for the system.
UserRegistry.smallIcon=UserRegistry.gif
UserRegistry.largeIcon=UserRegistry32X32.gif
UserRegistry.properties.displayName=Custom Properties
UserRegistry.properties.description=A set of arbitrary user registry configuration properties whose names are specific to a given type of pluggable registry.
UserRegistry.serverId.displayName=Server User ID
UserRegistry.serverId.description=The user ID under which the server will execute (for security purposes).
UserRegistry.serverPassword.displayName=Server User Password
UserRegistry.serverPassword.description=The password corresponding to the serverId.
UserRegistry.realm.displayName=Realm
UserRegistry.realm.description=The name of the user registry.
UserRegistry.limit.displayName=Limit
UserRegistry.limit.description=Specifies the maximum number of entries expected when retrieving user and group information from User Registry.  The search criterion should be refined when too many entries fit the search criterion.
UserRegistry.ignoreCase.displayName=Ignore Case
UserRegistry.ignoreCase.description=When set to true, a case insensitive authorization check will be performed.
LocalOSUserRegistry.displayName=Local OS User Registry
LocalOSUserRegistry.description=The user registry for the local operating system of the application server. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes.
LocalOSUserRegistry.smallIcon=LocalOSUserRegistry.gif
LocalOSUserRegistry.largeIcon=LocalOSUserRegistry32X32.gif
SWAMAuthentication.displayName=SWAM (Simple WebSphere Authentication Mechanism) Authentication
SWAMAuthentication.description=Use the local operating systems authentication.
SWAMAuthentication.smallIcon=SWAMAuthentication.gif
SWAMAuthentication.largeIcon=SWAMAuthentication32X32.gif
LDAPUserRegistryCategory.displayName=LDAP User Registry
LDAPUserRegistry.displayName=LDAP User Registry
LDAPUserRegistry.description=LDAP User Registry settings are used when users and groups reside in an external LDAP directory. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes.
LDAPUserRegistry.smallIcon=LDAPUserRegistry.gif
LDAPUserRegistry.largeIcon=LDAPUserRegistry32X32.gif
LDAPUserRegistry.searchFilter.displayName=Advanced LDAP Settings
LDAPUserRegistry.searchFilter.description=Specifies filter clauses fro searching user and group and other information in LDAP user registry. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes.
LDAPUserRegistry.hosts.displayName=Hosts
LDAPUserRegistry.hosts.description=The host port of the LDAP server. The port number will default to 389 if none is specified.
LDAPUserRegistry.type.displayName=Type
LDAPUserRegistry.type.description=The type of LDAP server being connected to.
LDAPUserRegistry.sslEnabled.displayName=SSL Enabled
LDAPUserRegistry.sslEnabled.description=Whether secure socket communications is enabled to the LDAP server.  When enabled, the LDAP Secure Socket Layer settings are used if specified.
LDAPUserRegistry.sslConfig.displayName=SSL Configuration
LDAPUserRegistry.sslConfig.description=Specifies the LDAP SSL Settings configuration setting.
LDAPUserRegistry.baseDN.displayName=Base Distinguished Name (DN)
LDAPUserRegistry.baseDN.description=The base distinguished name of the directory service, indicating the starting point for LDAP searches of the directory service.
LDAPUserRegistry.bindDN.displayName=Bind Distinguished Name (DN)
LDAPUserRegistry.bindDN.description=The distinguished name for application server to use to bind to the directory service.
LDAPUserRegistry.bindPassword.displayName=Bind Password
LDAPUserRegistry.bindPassword.description=The password for the application server to use to bind to the directory service.
LDAPUserRegistry.searchTimeout.displayName=Search Timeout
LDAPUserRegistry.searchTimeout.description=Specifies the timeout value in seconds for an LDAP server to respond before aborting a request.
LDAPUserRegistry.monitorInterval.displayName=Monitor Interval
LDAPUserRegistry.monitorInterval.description=Specifies the time interval in minutes to monitor the aliveness of LDAP server(s).
LDAPUserRegistry.reuseConnection.displayName=Reuse Connection
LDAPUserRegistry.reuseConnection.description=Should set to checked by default to reuse the LDAP connection.  Set to unchecked only in rare situations where a router is used to spray requests to multiple LDAP servers and when the router does not support affinity.
LDAPUserRegistry.enableTAM.displayName=Use Tivoli Access Manager for Account Policies
LDAPUserRegistry.enableTAM.description=Select this check box to indicate that the Tivoli Access Manager is used for authentication to honor the password and account policies. This option requires that you have previously installed the Tivoli Access Manager Server.
LDAPDirectoryType.SECUREWAY=SecureWay
LDAPDirectoryType.IBM_DIRECTORY_SERVER=IBM_Directory_Server
LDAPDirectoryType.IPLANET=Sun ONE
LDAPDirectoryType.NETSCAPE=Netscape
LDAPDirectoryType.DOMINO502=Domino
LDAPDirectoryType.ACTIVE_DIRECTORY=Active_Directory
LDAPDirectoryType.CUSTOM=Custom
LDAPDirectoryType.NDS=eDirectory
LTPA.displayName=LTPA
LTPA.description=Lightweight Third Party Authentication configuration settings. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes. The LTPA keys are automatically generated the first time security is enabled. After security is enabled, a new set of keys can be generated in two ways. If the password needs to be changed, change the password and press OK or Apply to generate the keys (no need to press the Generate Keys button). If password is the same, just press the Generate Keys button. The new set of keys will not be used until saved.
LTPA.smallIcon=LTPA.gif
LTPA.largeIcon=LTPA32X32.gif
LTPA.private.displayName=Private
LTPA.private.description=The private key is generated by server.  The value should not be manually altered.
LTPA.public.displayName=Public
LTPA.public.description=The public key is generated by server.  Its value should not be manually altered.
LTPA.shared.displayName=Shared
LTPA.shared.description=The shared key is generated by server.  It should not be manually altered.
LTPA.timeout.displayName=Timeout
LTPA.timeout.description=The time period in minutes at which an LTPA token will expire.  This time period should be longer than cache timeout configured in the Global Security panel.
LTPA.password.displayName=Password
LTPA.password.description=The password to encrypt and decrypt the LTPA keys. This password should be used when importing these keys into other WebSphere Application Server administrative domain configurations (if any) and when configuring SSO for Domino Server. If the password is changed and OK or Apply is pressed, a new set of keys are automatically generated. This new set of keys will be used after saved.
LTPA.confirmPassword.displayName=Confirm Password
LTPA.confirmPassword.description=Confirm the password to encrypt and decrypt the LTPA keys.
LTPA.generateKeys=Generate Keys
LTPA.generateKeys.description=The LTPA keys are used to encrypt and decrypt the LTPA tokens. If new keys need to be generated, use this panel after the server is back up with security turned on to generate the new keys. Click Save on the console taskbar to save the new keys and the password in the repository.
LTPA.importKeys=Import Keys
LTPA.importKeys.description=To support single sign on (SSO) in WebSphere across multiple WebSphere domains (cells), LTPA keys and a password should be shared among the domains. After exporting the keys from one of the cells into a file, use this panel to import the keys into the current configuration. Click Save on the console taskbar to save the imported keys and the password in the repository.
LTPA.exportKeys=Export Keys
LTPA.exportKeys.description=To support single sign on (SSO) in WebSphere across multiple WebSphere domains (cells), LTPA keys and a password should be shared among the domains. Use this panel to export the keys into a file.
LTPA.distributeKeys=Distribute Keys
LTPA.keyFilename.displayName=Key File Name
LTPA.keyFilename.description=The name of the file used when importing or exporting keys. Enter file name and then click either Import Keys or Export Keys. The imported keys will be used after saved.
SingleSignon.displayName=Single Signon (SSO)
SingleSignon.description=Specifies the configuration values for single sign-on.
SingleSignon.smallIcon=SingleSignon.gif
SingleSignon.largeIcon=SingleSignon32X32.gif
SingleSignon.requiresSSL.displayName=Requires SSL
SingleSignon.requiresSSL.description=When checked, specifies that single signon is enabled only when requests are over HTTPS Secure Socket Layer connections.
SingleSignon.domainName.displayName=Domain Name
SingleSignon.domainName.description=The domain name (ibm.com, for example) which specifys the set of all hosts to which single sign-on applies. If this field is not defined, the web browser will default the domain name to the host name where the web application is running. This means Single Sign On will be restricted to that application server host name and will not work with other application server host names in the domain.
SingleSignon.enabled.displayName=Enabled
SingleSignon.enabled.description=When checked, specifies that Single Sign-on is enabled.
CustomUserRegistry.displayName=Custom User Registry
CustomUserRegistry.description=A custom user registry that implements the com.ibm.websphere.security.UserRegistry interface.  For backward compatibility, a custom user registry that implemented the com.ibm.websphere.security.CustomRegistry interface are also supported. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes.
CustomUserRegistry.smallIcon=CustomUserRegistry.gif
CustomUserRegistry.largeIcon=CustomUserRegistry32X32.gif
CustomUserRegistry.customRegistryClassName.displayName=Custom Registry Classname
CustomUserRegistry.customRegistryClassName.description=A dot-separated class name that implements the com.ibm.websphere.security.UserRegistry interface.
LDAPSearchFilter.displayName=Advanced LDAP Settings
LDAPSearchFilter.description=Advanced LDAP User Registry settings are used when users and groups reside in an external LDAP directory. When security is enabled and any of these properties are changed, please go to the GlobalSecurity panel and click Apply or OK to validate the changes.
LDAPSearchFilter.smallIcon=LDAPSearchFilter.gif
LDAPSearchFilter.largeIcon=LDAPSearchFilter32X32.gif
LDAPSearchFilter.userFilter.displayName=User Filter
LDAPSearchFilter.userFilter.description=An LDAP filter clause for searching the registry for users.
LDAPSearchFilter.groupFilter.displayName=Group Filter
LDAPSearchFilter.groupFilter.description=An LDAP filter clause for searching the registry for groups.
LDAPSearchFilter.userIdMap.displayName=User ID Map
LDAPSearchFilter.userIdMap.description=An LDAP filter that maps the short name of a user to an LDAP entry.
LDAPSearchFilter.groupIdMap.displayName=Group ID Map
LDAPSearchFilter.groupIdMap.description=An LDAP filter that maps the short name of a group to an LDAP entry.
LDAPSearchFilter.groupMemberIdMap.displayName=Group Member ID Map
LDAPSearchFilter.groupMemberIdMap.description=An LDAP filter that identifies User to Groups memberships.
LDAPSearchFilter.certificateMapMode.displayName=Certificate Map Mode
LDAPSearchFilter.certificateMapMode.description=Whether to map X.509 Certificates into an LDAP directory by EXACT_DN or CERTIFICATE_FILTER. Specify CERTIFICATE_FILTER to use the specified Certificate Filter for the mapping.
LDAPSearchFilter.certificateFilter.displayName=Certificate Filter
LDAPSearchFilter.certificateFilter.description=If you specified the filter Certificate Mapping, use this property to specify the LDAP filter to use to map attributes in the client certificate to entries in LDAP.
LDAPSearchFilter.nullCertificateFilter=When Certificate Map Mode is not EXACT_DN, Certificate Filter must be specified.
CertificateMapMode.EXACT_DN=EXACT_DN
CertificateMapMode.CERTIFICATE_FILTER=CERTIFICATE_FILTER
TAInterceptor.displayName=Interceptors
TAInterceptor.description=Specifies trust information for reverse security proxy servers.
TAInterceptor.smallIcon=TAInterceptor.gif
TAInterceptor.largeIcon=TAInterceptor32X32.gif
TAInterceptor.trustProperties.displayName=Custom Properties
TAInterceptor.trustProperties.description=Specifies arbitrary name/value pairs of data, where the name is a property key and the value is a string value which can be used to set internal system configuration properties.
TAInterceptor.interceptorClassName.displayName=Interceptor Classname
TAInterceptor.interceptorClassName.description=Selects the trust association interceptor class name.
SecurityServer.displayName=Security Server
SecurityServer.description=
SecurityServer.smallIcon=SecurityServer.gif
SecurityServer.largeIcon=SecurityServer32X32.gif
TrustAssociation.displayName=Trust Association
TrustAssociation.description=Enable Trust Association. Trust Association is used to connect reversed proxies to Websphere.
TrustAssociation.smallIcon=TrustAssociation.gif
TrustAssociation.largeIcon=TrustAssociation32X32.gif
TrustAssociation.interceptors.displayName=Interceptors
TrustAssociation.interceptors.description=Specifies a list of Trust Association Interceptor implementations.
TrustAssociation.enabled.displayName=Trust Association Enabled
TrustAssociation.enabled.description=Enables Trust Association.
Key.displayName=Key
Key.description=
Key.smallIcon=Key.gif
Key.largeIcon=Key32X32.gif
Key.byteArray.displayName=Byte Array
Key.byteArray.description=Key contains an array of bytes.
SSLConfig.displayName=SSL Configuration Repertoires
SSLConfig.description=Specifies the list of defined Secure Socket Layer configurations.
SSLConfig.smallIcon=SSLConfig.gif
SSLConfig.largeIcon=SSLConfig32X32.gif
SSLConfig.setting.displayName=Setting
SSLConfig.setting.description=
SSLConfig.alias.displayName=Alias
SSLConfig.alias.description=Specifies one of the Secure Socket Layer configurations in the repertoire to use.
ServerSSLConfig.displayName=SSL Configuration Repertoire - Cell Level
ServerSSLConfig.description=Specifies the list of defined Secure Socket Layer configurations at the cell level.

AuthenticationProtocol.displayName=Authentication Protocol
CSIAuthentication.displayName=CSI Authentication
CSITransport.displayName=CSI Transport
IBMTransport.displayName=SAS Transport
Authentication.displayName=Authentication
Inbound.displayName=Inbound
Outbound.displayName=Outbound

CSIia.displayName=CSI Authentication -> Inbound
CSIia.description=This panel specifies authentication settings for requests which are received by this server using the OMG Common Secure Interoperability (CSI) authentication protocol.
CSIoa.displayName=CSI Authentication -> Outbound
CSIoa.description=This panel specifies authentication settings for requests which are sent by this server using the OMG Common Secure Interoperability (CSI) authentication protocol.
CSIic.displayName=CSI Transport -> Inbound
CSIic.description=This panel specifies transport settings for connections which are accepted by this server using the OMG Common Secure Interoperability (CSI) authentication protocol.
CSIoc.displayName=CSI Transport -> Outbound
CSIoc.description=This panel specifies transport settings for connections which are initiated by this server using the OMG Common Secure Interoperability (CSI) authentication protocol.
IBMic.displayName=SAS Transport -> Inbound
IBMic.description=This panel specifies transport settings for connections which are accepted by this server using the IBM Secure Assocation Service (SAS) authentication protocol.
IBMoc.displayName=SAS Transport -> Outbound
IBMoc.description=This panel specifies transport settings for connections which are initiated by this server using the IBM Secure Assocation Service (SAS) authentication protocol.
SSL.Default=DefaultSSLSettings
SSL.ORB=Specifies the Secure Socket Layer configuration in the repertoire to use.
CSI.Never=Never
CSI.Supported=Supported
CSI.Required=Required

Transport.TCPIP=TCPIP
Transport.SSL-Required=SSL-Required
Transport.SSL-Supported=SSL-Supported

SSLSettings.displayName=SSLSettings
SSLSettings_csi_i.description=Specifies a list of pre-defined SSL settings to choose from for inbound connections.  These are configured at the SSL Repertoire panel.
SSLSettings_csi_o.description=Specifies a list of pre-defined SSL settings to choose from for outbound connections.  These are configured at the SSL Repertoire panel.
SSLSettings_ibm_i.description=Specifies a list of pre-defined SSL settings to choose from for inbound connections.  These are configured at the SSL Repertoire panel.
SSLSettings_ibm_o.description=Specifies a list of pre-defined SSL settings to choose from for outbound connections.  These are configured at the SSL Repertoire panel.

Transport_i.description=If TCP/IP, then only a TCP/IP listener port will be opened and all requests inbound will not have SSL protection.  If SSL Supported, then both a TCP/IP and SSL listener port will be opened, most requests will come inbound via SSL.  If SSL Required, then only an SSL listener port will be opened, all requests will come in via SSL.  Note: If the active authentication protocol is set to "CSI and SAS", then a TCP/IP listener port will be opened for the SAS protocol regardless of this setting.
Transport_o.description=If TCP/IP, then this server will only open TCP/IP connections with downstream servers.  If SSL supported, this server will open SSL connections with any downstream server supporting them, and TCP/IP connections with any downstream servers not supporting them.  If SSL required, this server will always open SSL connections with downstream servers.

BasicAuthentication.displayName=Basic Authentication
BasicAuthentication_i.description=If required, clients to this server must specify a userid/password for any method request.  If supported, clients to this server may specify a userid/password, however, a method may be invoked without this type of authentication (e.g., using anonymous or client certificate instead).  If never, this server will not accept userid/password authentication.  Basic Authentication takes precedence over client certificate authentication if both are performed.
BasicAuthentication_o.description=If required, this server is required to specify a userid/password to authenticate with downstream servers for any method request.  This server cannot initiate downstream requests with servers which do not support or require Basic Authentication inbound.  If supported, this server may specify a userid/password to authenticate with downstream servers, however, a method may be invoked without this type of authentication (e.g., using anonymous or client certificate instead).  If never, this server will not send userid/password authentication to downstream servers.  By selecting never, a request will fail to downstream servers which require Basic Authentication.

ClientCertificateAuthentication.displayName=Client Certificate Authentication
ClientCertificateAuthentication_i.description=If required, clients to this server must authenticate using SSL client certificates before a method can be invoked.  If supported, clients to this server may authenticate using SSL client certificates, however, a method may be invoked without this type of authentication (e.g., using anonymous or basic authentication instead).  If never, clients may not attempt SSL client certificate authentication with this server.
ClientCertificateAuthentication_o.description=If required, this server must use SSL client certificates to authenticate to downstream servers.  If supported, this server may use SSL client certificates to authenticate to downstream servers, however, a method may be invoked without this type of authentication (e.g., using anonymous or basic authentication instead).  If never, this server will not attempt SSL client certificate authentication with downstream servers.

IdentityAssertion.displayName=Identity Assertion
IdentityAssertion_i.description=When enabled, this server permits an upstream server to assert a client identity (which the upstream server has already authenticated) as a method of authentication to this downstream server.  This server will not re-authenticate the asserted identity since it trusts the upstream server.  Identity Assertion takes precedence over all other types of authentication.
IdentityAssertion_o.description=When enabled, this server may assert received client identities (authenticated on this server) to downstream servers as a method of authentication.  The downstream server will not re-authenticate the asserted identity since it trusts this server.  This server's principal should be listed on the downstream server's trusted principal list.

StatefulSession.displayName=Stateful
StatefulSession.description=Specifies a comma-separated list of server user IDs, which are trusted to perform identity assertion to this server.

LDAPUserRegistry.host.displayName=Host
LDAPUserRegistry.host.description=Specifies LDAP server host name.
LDAPUserRegistry.port.displayName=Port
LDAPUserRegistry.port.description=Specifies LDAP server port.

ServerSecurity.displayName=Server Security
ServerSecurity.description=To change the security configuration at the server level, modify the attributes from the corresponding links below. To revert back to the cell defaults for a specific section, select the 'Use Cell Security', 'Use Cell CSI', or 'Use Cell SAS' button for that section. Hit the Save link above to persist the changes at the server level.

ServerLevelSecurity.displayName=Server Level Security
ServerLevelSecurity.description=Specifies server level security configuration. Enable server level security in this panel.

OverrideCellSecurity.displayName=Server Level Security
OverrideCellSecurity.description=Server Level Security - Override cell default
OverrideCellCSI.displayName=CSI
OverrideCellCSI.description=CSI - Override cell default
OverrideCellIBM.displayName=SAS
OverrideCellIBM.description=SAS - Override cell default
OverrideCellJAAS.displayName=JAAS
OverrideCellJAAS.description=JAAS - Override cell default

useCellSecurityKey=Use Cell Security
useCellCSIKey=Use Cell CSI
useCellIBMKey=Use Cell SAS

CSI.displayName=CSI
IBM.displayName=SAS

validation.failed=Validation failed for user {0}. Please try again...
validation.invalidRegistry=The LTPA authentication mechanism is not supported with the LocalOS user registry.
validation.nullRegistry=The User Registry is null. Check the Registry properties.
validation.nullLTPApw=The LTPA password is not set. Validation failed.
validation.nullKey=The LTPA keys generated are null. Failing validation.
validation.failedAuth=Authentication failed for user: {0}.  Please try again...
validation.nullServerID=The Server User ID is not valid.  Please enter a valid Server User ID.
validation.SSONotEnabled=Single Sign On (SSO) has been disabled. When LTPA is the authentication mechanism, SSO is typically required to support Web applications that use FormLogin. The WebSphere admin console uses FormLogin. If you save this configuration, you will not be able to use the admin console to manage or configure WebSphere. Do no save this configuration unless you are sure you understand the consequences.
validation.nullSSODomainName=The domain name for Single Sign On is not defined. The web browser will default the domain name to the host name where the web application is running. This means Single Sign On will be restricted to that application server host name and will not work with other application server host names in the domain.
validation.invalidCacheTimeout=The Cache Timeout value should be greater than or equal to 30 seconds.
validation.java2secwarning=If Java 2 Security is not enabled, the JVM system resources are not protected.  For example, applications can read and write to files on file systems, listen to sockets, exit the Application Server process, etc.. However, by enabling Java 2 Security, applications may fail to run if the required permissions are not granted to the applications.
validation.java2enableWarning=When security is enabled, Java 2 security is automatically enabled to provide additional security for JVM system resources.  Please make sure that your applications are Java 2 Security ready. If not, they may fail to run.
validation.failed.ignoreCase=The LDAP directory server requires Ignore Case to be selected. Please enable Ignore Case and retry.

SecurityUtil.errorCreateResource=An exception occurred creating a new security.xml and security extent in context {0}

security.state.changed=If any of the fields were changed, save the configuration, then stop and start the server.

security.password.incorrect=The LTPA Password does not match the Confirm Password.
security.error.export.key=The export file name is required in order to export LTPA keys.
security.error.mismatch.key=LTPA keys can not be exported unless the current configuration changes are saved.
security.ltpa.pw.null=The LTPA Password is required.
security.invalid.file.name=File name does not exist for importing LTPA keys.
security.key.fields.required=The Key and Trust File Names and Passwords are required when not using a cryptographic token.
security.duplicate.alias=Duplicate alias name. Alias name must be unique.
security.crypto.fields.required=All fields are required when cryptographic token support is enabled.
security.crypto.library.file.not.found=The library file, indicated in the Library File field, was not found.
security.crypto.library.file.open.failed=The library file cannot be opened. Either the password or the value of the com.ibm.ssl.tokenSlot property is not valid. Click Security > SSL > SSL_Setting. Under Additional Properties, click Custom Properties. Click com.ibm.ssl.tokenSlot and enter a valid value in the Value field.
security.fully.qualified.names=Web applications should be accessed with a complete host and domain name in the URL (for example http://myhost.austin.ibm.com:9090/admin) since SSO is enabled and a domain has been specified.
security.keys.generated=New LTPA Keys have been generated due to an LTPA password change.
security.keys.dont.match=You may not export or distribute LTPA keys until the current LTPA configuration changes have been saved.
security.ssl.custom.rqd=A custom SSL provider is required.
security.ssl.warn.changes=The values for Protocol and Cipher Suites have been changed to match the specified Protocol.
security.ssl.warn.no.crypto=Values are not defined for the cryptographic token. For crypto hardware support to function properly, you need to provide cryptographic token information.
security.ssl.key.file.not.found=The key file, indicated in the Key File Name field, was not found.
security.ssl.key.file.bad.type=The key file type, indicated in the Key File Format field, is not valid.
security.ssl.key.file.open.failed=The key file cannot be opened because the key file password is not valid.
securlty.ssl.trust.file.not.found=The trust file, indicated in the Trust File Name field, was not found.
security.ssl.trust.file.bad.format=The trust file type, indicated in the Trust File Format field, is not valid.
security.ssl.trust.file.open.failed=The trust file cannot be opened because the trust file password is not valid.
security.ssl.bad.server.alias=The value of the com.ibm.ssl.keyStoreServerAlias property is not valid. Click Security > SSL > SSL_Setting. Under Additional Properties, click Custom Properties. Click com.ibm.ssl.keyStoreServerAlias and enter a valid value in the Value field.
security.ssl.bad.client.alias=The value of the com.ibm.ssl.keyStoreClientAlias property is not valid. Click Security > SSL > SSL_Setting. Under Additional Properties, click Custom Properties. Click com.ibm.ssl.keyStoreClientAlias and enter a valid value in the Value field.
security.error.no.TAM=The selected LDAP User Registry Type does not support the use of the Tivoli Access Manager for authentication.

# The following error messages are accessed through Tr.error().
# Note that the SECGxxxx numbers are used to correlate the user visible messages (e.g. Tr.warning, Tr.error,
# Tr.audit) with an Explanation & User Response message that is documented in a Message Reference guide.
# Do not modify the existing SECGxxxx numbers.  See http://hany.austin.ibm.com/messages/index.html
# for info on how to add new messages.
# Every message you add to this section should also include an Explanation & a User Response.
# -------------------------------------------------------------------------------------------------
security.ctr.mbean.exception=SECG0001E: Cannot find SecurityAdmin MBean. The exception is {0}.
security.ctr.mbean.exception.explanation=CMSG0001
security.ctr.mbean.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ctr.ckpwd.exception=SECG0002E: An exception occurred in ConnectToRuntime when checking password for user: {0}. The exception is {1}.
security.ctr.ckpwd.exception.explanation=CMSG0001
security.ctr.ckpwd.exception.useraction=This can happen when the user registry configured cannot be contacted to do authentication. The registry might have been configured correctly. Check the registry configuration and also make sure that if using localOS registry, the user name that the WAS process is running under has the right privileges to contact the registry APIs (In Unix, this should be root and in Windows this is should be "Act as part of opertaing system" privilege).

# -------------------------------------------------------------------------------------------------
security.ctr.genkey.exception=SECG0003E: An exception occurred in ConnectToRuntime when generating ltpa keys. The exception is {0}.
security.ctr.genkey.exception.explanation=CMSG0001
security.ctr.genkey.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ctr.impkey.exception=SECG0004E: An exception occurred in ConnectToRuntime when importing ltpa keys: The exception is {0}.
security.ctr.impkey.exception.explanation=Unable to import specified ltpa keys.
security.ctr.impkey.exception.useraction=The password might not be able to decrypt the importing keys. Make sure that the password matches the ltpa keys.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.ctr.expkey.exception=SECG0005E: An exception occurred in ConnectToRuntime when exporting ltpa keys: The exception is {0}.
security.ctr.expkey.exception.explanation=Unable to get the ltpa keys from the server.
security.ctr.expkey.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ctr.getrealm.exception=SECG0006E: An exception occurred in ConnectToRuntime when getting realm. The exception is {0}.
security.ctr.getrealm.exception.explanation=Unable to get realm of the active registry.
security.ctr.getrealm.exception.useraction= Make sure that the registry configuration is correct and if it is localOS make sure the process running WAS can accees the registry APIs (In Unix, this should be root and in Windows this is should be "Act as part of opertaing system" privilege).

# -------------------------------------------------------------------------------------------------
security.ctr.expjaas.exception=SECG0007E: An exception occurred in ConnectToRuntime when exporting JAAS configuration: {0}.
security.ctr.expjaas.exception.explanation=Unable to update JAAS runtime.
security.ctr.expjaas.exception.useraction=Retry the operation after a few minutes.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.ctr.nombean.exception=SECG0008E: No SecurityAdmin MBean found for object {0}: returning null.
security.ctr.nombean.exception.explanation=The admin service factory was unable to locate an MBean for the object name in the message.
security.ctr.nombean.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ctr.jaasnosec.exception=SECG0009E: Security object was not found in extent for JAAS runtime update.
security.ctr.jaasnosec.exception.explanation=No security.xml file was found in the resource set.
security.ctr.jaasnosec.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldapsrch.getsec.exception=SECG0010E: An exception occurred getting the security object: {0}.
security.ldapsrch.getsec.exception.explanation=No security.xml file was found in the resource set.
security.ldapsrch.getsec.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldapsrch.nosec=SECG0011E: Security object was not found in extent in changeLdapDirType().
security.ldapsrch.nosec.explanation=No security.xml file was found in the resource set or no security object was found in the security.xml file.
security.ldapsrch.nosec.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldapsrch.getldapprops.exception=SECG0012W: An exception occurred getting the contents of the LdapConfig.nlsprops file: {0}.
security.ldapsrch.getldapprops.exception.explanation=LdapConfig.nlsprops is unavailable.  It might be deleted or the current user does not have the read access.
security.ldapsrch.getldapprops.exception.useraction=Check the permission for the file.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.ldapsrch.fileclose.exception=SECG0013W: An exception occurred closing the LdapConfig.nlsprops file: {0}.
security.ldapsrch.fileclose.exception.explanation=Unable to close the LdapConfig.nlsprops file.  This is usually cause by file contention
security.ldapsrch.fileclose.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldaprgy.getldapprops.exception=SECG0014W: An exception occurred getting the contents of the LdapConfig.nlsprops file: {0}.
security.ldaprgy.getldapprops.exception.explanation=LdapConfig.nlsprops is unavailable.  It might be deleted or the current user does not have the read access.
security.ldaprgy.getldapprops.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldaprgy.nofilter=SECG0015W: No LDAP Search filter entry was found in the security.xml file in the LDAP User Registry section.
security.ldaprgy.nofilter.explanation=No LDAP Search filter available.
security.ldaprgy.nofilter.useraction=Add new LDAP Search filter entry through the adminconsole.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.ltpa.import.exception=SECG0016E: An exception occurred importing the LTPA keys: {0}.
security.ltpa.import.exception.explanation==Unable to import specified ltpa keys.
security.ltpa.import.exception.useraction=Make sure ltpa keys are available in the specified location.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.ltpa.export.exception=SECG0017E: An exception occurred exporting the LTPA keys: {0}.
security.ltpa.export.exception.explanation=Unable to export ltpa keys to the specified location.  The user might not have write access to the target directory.
security.ltpa.export.exception.useraction=Make sure the user has write access to the location specifed.  If the problem persists, contact support for assistance.

# -------------------------------------------------------------------------------------------------
security.props.extract.exception=SECG0018E: An exception occurred extracting the resource {0}: {1}.
security.props.extract.exception.explanation=No security.xml file was found in the resource set.
security.props.extract.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.props.load.exception=SECG0019E: An exception occurred loading the resource {0}: {1}.
security.props.load.exception.explanation=No security.xml file was found in the resource set.
security.props.load.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.props.save.exception=SECG0020E: An exception occurred creating a new security.xml and security extent in context {0}: {1}.
security.props.save.exception.explanation=CMSG0001
security.props.save.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.validation.exception=SECG0021E: An exception occurred validating security configuration values: {0}.
security.validation.exception.explanation=Improper values might be specified in the field
security.validation.exception.useraction=Check to make sure that proper value was entered.  If the problem persists, contact support for assistance.
# -------------------------------------------------------------------------------------------------
security.validation.ldap.exception=SECG0022E: An exception occurred setting LDAP security configuration values: {0}.
security.validation.ldap.exception.explanation=CMSG0001
security.validation.ldap.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.utils.save.exception=SECG0023E: An exception occurred creating a new security.xml and security extent in context {0}: {1}.
security.utils.save.exception.explanation=CMSG0001
security.utils.save.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.utils.nosec=SECG0024W: The security.xml file was not available in the context {0}.
security.utils.nosec.explanation=No security.xml file was found in the resource set.
security.utils.nosec.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.utils.load.exception=SECG0025E: An exception occurred loading the security object in the context {0}: {1}.
security.utils.load.exception.explanation=No security.xml file was found in the resource set.
security.utils.load.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.server.setup.exception=SECG0026E: An exception occurred setting up the detail form for server security: {0}.
security.server.setup.exception.explanation=There might be errors in security.xml file.
security.server.setup.exception.useraction=CMSG0002

# -------------------------------------------------------------------------------------------------
security.ldap.ignorecase.error=SECG0027E: Ignore case is not set for the LDAP directory type {0}.
security.ldap.ignorecase.error.explanation=The LDAP directory type selected needs Ignore Case to be selected.
security.ldap.ignorecase.error.useraction=Enable Ignore Case in the LDAP panel.
# -------------------------------------------------------------------------------------------------
security.validation.noregistry=SECG0028E: Registry object does not exist.
security.validation.noregistry.explanation=Internal Error. Security configuration file might be corrupted.
security.validation.noregistry.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.validation.noltpa=SECG0029E: LTPA object does not exist.
security.validation.noltpa.explanation=Internal Error. Security configuration file might be corrupted.
security.validation.noltpa.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.validation.noltpapassword=SECG0030E: LTPA password is missing.
security.validation.noltpapassword.explanation=No LTPA password to generate LTPA keys.
security.validation.noltpapassword.useraction=Make sure LTPA password is set. If already set, contact the your IBM service representative.
# -------------------------------------------------------------------------------------------------
security.validation.noltpakeys=SECG0031E: LTPA keys are missing.
security.validation.noltpakeys.explanation=Cannot find LTPA keys. These should have been generated.
security.validation.noltpakeys.useraction=Make sure LTPA password is set. Check for any other exceptions to narrow the problem doen. If the problem persists, contact the your IBM service representative.
# -------------------------------------------------------------------------------------------------
security.validation.nodirtype=SECG0032E: LDAP directory type missing.
security.validation.nodirtype.explanation=CMSG0001
security.validation.nodirtype.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.validation.nosearchfilter=SECG0033E: LDAP search filter object does not exist.
security.validation.nosearchfilter.explanation=CMSG0001
security.validation.nosearchfilter.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.validation.nohost=SECG0034E: LDAP host name is missing.
security.validation.nohost.explanation= LDAP host name which is required to connect to the LDAP server is missing.
security.validation.nohost.useraction=Make sure LDAP host name exits in the LDAP configuration. If it does, contact your IBM service representative.
# -------------------------------------------------------------------------------------------------
security.validation.nocustomclass=SECG0035E: Custom User Registry class name is missing.
security.validation.nocustomclass.explanation= Cannot get the Custom User Registry implementation file name.
security.validation.nocustomclass.useraction=Make sure that the Custom User Registry implementation class name exists in the Custom User Registry configuration.If it does, contact your IBM service representative.
# -------------------------------------------------------------------------------------------------
security.ctr.nombean.error=SECG0036E: Cannot find SecurityAdmin MBean.
security.ctr.nombean.error.explanation=CMSG0001
security.ctr.nombean.error.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.ctr.checkKeyFile.exception=SECG0037E: An exception occurred in ConnectToRuntime when checking the SSL key file: The exception is {0}.
security.ctr.checkKeyFile.exception.explanation=Unable to validate the SSL key file information.
security.ctr.checkKeyFile.exception.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.ctr.checkTrustFile.exception=SECG0038E: An exception occurred in ConnectToRuntime when checking the SSL trust file: The exception is {0}.
security.ctr.checkTrustFile.exception.explanation=Unable to validate the SSL trust file information.
security.ctr.checkTrustFile.exception.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------
security.ctr.checkTokenLibFile.exception=SECG0039E: An exception occurred in ConnectToRuntime when checking the cryptographic token library file: The exception is {0}.
security.ctr.checkTokenLibFile.exception.explanation=Unable to validate the cryptographic token library file information.
security.ctr.checkTokenLibFile.exception.useraction=CMSG0002
# -------------------------------------------------------------------------------------------------

# End of Tr.error() message section
# -------------------------------------------------------------------------------------------------
