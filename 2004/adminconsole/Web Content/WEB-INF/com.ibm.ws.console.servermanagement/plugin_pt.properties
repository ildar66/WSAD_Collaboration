# IBM Confidential OCO Source Material
# 5639-D57, 5630-A36, 5630-A37, 5724-D18 (C) COPYRIGHT International Business Machines Corp. 1997, 2002
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited with the
# U.S. Copyright Office.
#
#CMVCPATHNAME ws/code/webui.servermanagement/src/servermanagement/WEB-INF/plugin.nlsprops
#ISMESSAGEFILE FALSE
#

nav.webSphere.servermanagement.configuration=Servers
nav.webSphere.servers=Servers
nav.view.ApplicationServer=Application Servers
nav.view.JMSServer=JMS Servers
Server.node.displayName=Node
Server.node.description=Node
Server.status.displayName=Status
Server.status.description=Status
ExecutionState.STARTED=Started
ExecutionState.STOPPED=Stopped
ExecutionState.UNAVAILABLE=Unavailable
attribute.not.found=JMX Error:Attribute not found 
Server.type.displayName=Type
Server.type.description=The type of server.
Server.mbean.pid.displayName=Process Id
Server.mbean.pid.description=The native operating system's process id for this server.
Server.mbean.cellName.displayName=Cell Name
Server.mbean.cellName.description=The name of the cell in which this server is running.
Server.mbean.nodeName.displayName=Node Name
Server.mbean.nodeName.description=The name of the node in which this server is running.
Server.mbean.state.displayName=State
Server.mbean.state.description=The runtime execution state for this server.
ServerManagement.logsAndTrace.displayName=Logging and Tracing
ServerManagement.logsAndTrace.description=Specify Logging and Trace settings for this server.
ServerManagement.RASLoggingService.displayName=IBM Service Logs
ServerManagement.RASLoggingService.description=Configure the IBM service log, also known as the activity log. 
ServerManagement.TraceService.displayName=Diagnostic Trace Service
ServerManagement.TraceService.description=View and modify the properties of the diagnostic trace service.

task.manage.server=Manage Local Server

TransactionService.displayName=Transaction Service
TransactionService.description=The transaction service is a server runtime component that can coordinate updates to multiple resource managers to ensure atomic updates of data.Transactions are started and ended by applications or the container in which the applications are deployed.
TransactionService.smallIcon=TransactionService.gif
TransactionService.largeIcon=TransactionService32X32.gif
TransactionService.transactionLogDirectory.displayName=Transaction log directory
TransactionService.transactionLogDirectory.description=Specifies the name of a directory for this server where the transaction service stores log files for recovery.Blank value in the server's configuration is expanded by the transaction log at startup to be the directory (install_root)/tranlog/(server_name).
TransactionService.totalTranLifetimeTimeout.displayName=Total transaction lifetime timeout
TransactionService.totalTranLifetimeTimeout.description=The maximum duration, in seconds, for transactions on this application server. Any transaction that is not requested to complete before this timeout will be rolled back.
TransactionService.clientInactivityTimeout.displayName=Client inactivity timeout
TransactionService.clientInactivityTimeout.description=The maximum duration, in seconds, between transactional requests from a remote client. Any period of client inactivity that exceeds this timeout results in the transaction being rolled back in this application server.
TransactionService.enableLoggingForHeuristicReporting.displayName=enableLoggingForHeuristicReporting
TransactionService.enableLoggingForHeuristicReporting.description=Enables logging for heuristic reporting (an advanced function available in the EEx add-on package). If applications are configured to allow one-phase resources to participate in two-phase transactions, reporting of heuristic outcomes that occur at application server failure requires extra information to be written to the transaction log.  If enabled, one additional log write will be perfomed for any transaction that involves both one and two-phase resources.  No additional records are written for transactions that do not involve a one-phase resource.  Default=false
TransactionService.mbean.transactionLogDirectory.displayName=Transaction Log Directory
TransactionService.mbean.transactionLogDirectory.description=Specifies the name of a directory for this server where the transaction service stores log files for recovery.
TransactionService.mbean.totalTranLifetimeTimeout.displayName=Total transaction lifetime timeout
TransactionService.mbean.totalTranLifetimeTimeout.description=
TransactionService.mbean.clientInactivityTimeout.displayName=Client inactivity timeout
TransactionService.mbean.clientInactivityTimeout.description=
Transaction.displayName=Manage Transactions
Transaction.description=Manage transactions that are currently active on the application server.
Transaction.localId.displayName=Local Id
Transaction.status.displayName=Status 
Transaction.globalId.displayName=Global Id
button.transactionlist=Manage Transactions
Transaction.noactivetransaction.exists=There are no active transactions running on server.
jmx.malformedobject.error=Mbean of type {0} is not found.
jmx.instancenotfound.error=operation {0} on mbean of type {1} failed.

ApplicationServer.installedApps.displayName=Installed Applications
ApplicationServer.installedApps.description=Manage applications installed into this server.

ApplicationServer.displayName=Application Servers
ApplicationServer.description=An application server is a server which provides services required to run  enterprise applications.
ApplicationServer.name.displayName=Name
ApplicationServer.name.description=The display name for the server.
ApplicationServer.smallIcon=ApplicationServer.gif
ApplicationServer.largeIcon=ApplicationServer32X32.gif
ApplicationServer.locationServiceDaemon.displayName=locationServiceDaemon
ApplicationServer.locationServiceDaemon.description=
ApplicationServer.components.DynamicCache.displayName=Dynamic Cache Service
ApplicationServer.components.DynamicCache.description=Specify settings for the Dynamic Cache service of this server.
ApplicationServer.applicationServerServices.displayName=applicationServerServices
ApplicationServer.applicationServerServices.description=Application server-scoped services.  DERIVED: See services collection inherited from Container superclass.
ApplicationServer.applicationServerServices.TransactionService.displayName=Transaction Service
ApplicationServer.applicationServerServices.TransactionService.description=Specify settings for the Transaction Service, as well as manage active transaction locks.
ApplicationServer.components.WebContainer.displayName=Web Container
ApplicationServer.components.WebContainer.description= Specify thread pool and dynamic cache settings for the container . Also, specify session manager settings such as persistence and tuning parameters, and HTTP transport settings.
ApplicationServer.components.EJBContainer.displayName=EJB Container
ApplicationServer.components.EJBContainer.description=Specify cache and datasource information for the container.
Server.services.ObjectRequestBroker.displayName=ORB Service
Server.services.ObjectRequestBroker.description=Specify settings for the Object Request Broker Service.
ApplicationServer.id.displayName=id
ApplicationServer.id.description=A server can be assigned a unique identifier.
ApplicationServer.applicationClassLoaderPolicy.displayName=Application classloader policy
ApplicationServer.applicationClassLoaderPolicy.description=Specifies whether there is a single classloader for all applications (\"Single\") or a classloader per application (\"Multiple\").
ApplicationServer.applicationClassLoadingMode.displayName=Application class loading mode
ApplicationServer.applicationClassLoadingMode.description=Specifies the class loading mode when the application classloader policy is \"Single\"
ClassLoaderPolicy.SINGLE=Application
ClassLoaderPolicy.MULTIPLE=Module
ServerClassLoaderPolicy.SINGLE=Single
ServerClassLoaderPolicy.MULTIPLE=Multiple
applicationClassLoadingMode.PARENT_FIRST=Parent first
applicationClassLoadingMode.PARENT_LAST=Parent last                         
ApplicationContainer.displayName=ApplicationContainer
ApplicationContainer.description=
ApplicationContainer.smallIcon=ApplicationContainer.gif
ApplicationContainer.largeIcon=ApplicationContainer32X32.gif
DynamicCache.displayName=Dynamic Cache Service
DynamicCache.description=Dynamic Cache Service
DynamicCache.smallIcon=DynamicCache.gif
DynamicCache.largeIcon=DynamicCache32X32.gif
DynamicCache.cacheGroups.description=Define sets of external caches controlled by WebSphere Application Server.
DynamicCache.cacheReplication.displayName=cacheReplication
DynamicCache.cacheReplication.description=
DynamicCache.cacheSize.units=entries
DynamicCache.cacheSize.description=A positive integer defining the maximum number of entries the cache will hold.
DynamicCache.defaultPriority.description=The default priority for cache entries, determining how long an entry will stay in a full cache.
DynamicCache.replicationType.displayName=replicationType
DynamicCache.replicationType.description=The algorithm for distributing shared cache entries to cooperating dynamic caches connected via DRS.  Must be set to one of the dynamicCacheReplicationKind values.
DynamicCache.pushFrequency.displayName=pushFrequency
DynamicCache.pushFrequency.description=A time interval, specified in seconds, used when replication type is PUSH. Default value is 0.
DynamicCache.enableDiskOffload.displayName=enableDiskOffload
DynamicCache.enableDiskOffload.description=Enables disk offloading.
DynamicCache.diskOffloadLocation.displayName=diskOffloadLocation
DynamicCache.diskOffloadLocation.description=Specifies a directory used for disk offload.
DynamicCache.hashSize.displayName=hashSize
DynamicCache.hashSize.description=Specifies a hash size when disk offload is enabled. Valid values are powers of 2 (1, 2, 4, 8...).
ExternalCacheGroup.description=Use this page to define sets of external caches controlled by WebSphere Application Server on Web servers, such as IBM Edge Server and IBM HTTP Server.
ExternalCacheGroup.smallIcon=ExternalCacheGroup.gif
ExternalCacheGroup.largeIcon=ExternalCacheGroup32X32.gif
ExternalCacheGroup.members.description=Members of an external cache group controlled by WebSphere Application Server.
ExternalCacheGroup.name.description=External cache group name.
ExternalCacheGroup.type.description=Currenty, only shared external cache groups supported.
ExternalCacheGroupMember.displayName=ExternalCacheGroupMember
ExternalCacheGroupMember.description=A single external cache that WebSphere is to control.
ExternalCacheGroupMember.smallIcon=ExternalCacheGroupMember.gif
ExternalCacheGroupMember.largeIcon=ExternalCacheGroupMember32X32.gif
ExternalCacheGroupMember.address.description=The hostname and possibly port number of an external cache.
ExternalCacheGroupMember.adapterBeanName.description=The name of a class, located on the WebSphere Application Server classpath, of the adapter between WebSphere Application Server and this external cache.
ExternalCacheGroupKind.SHARED=SHARED
ExternalCacheGroupKind.NOT_SHARED=NOT_SHARED
DynamicCacheReplicationKind.NONE=NONE
DynamicCacheReplicationKind.PUSH=PUSH
DynamicCacheReplicationKind.PULL=PULL
DynamicCacheReplicationKind.PUSH_PULL=PUSH_PULL
EJBCache.displayName=EJB Cache Settings
EJBCache.description=Each EJB container keeps a cache of bean instances for ready access.  This section allows you to specify the parameters to configure the cache.
EJBCache.smallIcon=EJBCache.gif
EJBCache.largeIcon=EJBCache32X32.gif
EJBCache.cleanupInterval.displayName=Cleanup interval
EJBCache.cleanupInterval.units=milliseconds
EJBCache.cleanupInterval.description=The interval at which the container attempts to remove unused items from the cache in order to reduce the total number of items to the value of the cache size.
EJBCache.cacheSize.displayName=Cache size
EJBCache.cacheSize.units=buckets
EJBCache.cacheSize.description=Specifies the number of buckets in the active instance list within the EJB container.
EJBContainer.displayName=EJB Container
EJBContainer.description=An EJB container is a component of a J2EE application server which provides runtime services to ejb modules which can be deployed within it.
EJBContainer.smallIcon=EJBContainer.gif
EJBContainer.largeIcon=EJBContainer32X32.gif
EJBContainer.cacheSettings.displayName=EJB Cache Settings
EJBContainer.cacheSettings.description=Each EJB container keeps a cache of bean instances for ready access.  This section allows you to specify the parameters to configure the cache.
EJBContainer.passivationDirectory.displayName=Passivation directory
EJBContainer.passivationDirectory.description=The directory into which the container will save the persistent state of passivated stateful session beans.
EJBContainer.inactivePoolCleanupInterval.displayName=Inactive pool cleanup interval
EJBContainer.inactivePoolCleanupInterval.description=The interval at which the container examines the pools of available bean instances to determine if some instances can be deleted to reduce memory usage.
EJBContainer.defaultDatasourceJNDIName.displayName=Default datasource JNDI name
EJBContainer.defaultDatasourceJNDIName.description=The JNDI name of a data source to use if no data source has been specified during application deployment. This setting is not applicable for EJB 2.x-compliant CMP beans.
MessageListenerService.displayName=Message Listener Service
MessageListenerService.description=Configuration for the Message Listener Service.This service provides the Message Driven Bean (MDB) listening process, whereby MDBs are deployed against ListenerPorts that define the JMS destination to listen upon. These Listener Ports are defined within this service along with settings for its Thread Pool.
MessageListenerService.smallIcon=MessageListenerService.gif
MessageListenerService.largeIcon=MessageListenerService32X32.gif
MessageListenerService.listenerPorts.displayName=Listener Ports
MessageListenerService.listenerPorts.description=The message listener ports configured in the administrative domain.
MessageListenerService.threadPool.displayName=Thread Pool
MessageListenerService.threadPool.description=Specify Message Listener Service MDB thread pool settings
MessageListenerService.name.displayName=Name
MessageListenerService.name.description=The name by which the message listener service is known for administrative purposes.
MessageListenerService.description.displayName=Description
MessageListenerService.description.description=The message listener service is an extension to the JMS functions of the JMS provider.  It provides a listener manager that controls and monitors one or more JMS listeners, which each monitor a JMS destination on behalf of a deployed message-driven bean.
ListenerPort.name.description=Name of the listener port
ListenerPort.displayName=Listener Ports
ListenerPort.description=Listener ports for Message Driven Beans to listen upon for messages. Each port specifies the JMS Connection Factory and JMS Destination that an MDB, deployed against that port, will listen upon.
ListenerPort.smallIcon=ListenerPort.gif
ListenerPort.largeIcon=ListenerPort32X32.gif
ListenerPort.description.displayName=Description
ListenerPort.description.description=A description of the listener port, for administrative purposes
ListenerPort.connectionFactoryJNDIName.displayName=Connection factory JNDI name
ListenerPort.connectionFactoryJNDIName.description=The JNDI name for the JMS connection factory to be used by the listener port; for example, jms/connFactory1.
ListenerPort.destinationJNDIName.displayName=Destination JNDI name
ListenerPort.destinationJNDIName.description=The JNDI name for the destination to be used by the listener port; for example, jms/destn1.
ListenerPort.maxSessions.displayName=Maximum sessions
ListenerPort.maxSessions.description=The maximum number of concurrent JMS server sessions used by a listener to process messages, in the range 1 through 2147483647.
ListenerPort.maxRetries.displayName=Maximum retries
ListenerPort.maxRetries.description=The maximum number of times that the listener tries to deliver a message before the listener is stopped, in the range 0 through 2147483647.
ListenerPort.maxMessages.displayName=Maximum messages
ListenerPort.maxMessages.description=The maximum number of messages that the listener can process in one JMS server session, in the range 0 through 2147483647.
ListenerPort.mbean.started.displayName=Started
ListenerPort.mbean.started.description=Execution state of listener port
ListenerPort.mbean.jmsConnJNDIName.displayName=Connection factory JNDI name
ListenerPort.mbean.jmsConnJNDIName.description=JNDI name for JMS ConnectionFactory to be used by the listener thread.
ListenerPort.mbean.jmsDestJNDIName.displayName=Destination JNDI name
ListenerPort.mbean.jmsDestJNDIName.description=JNDI name for JMS Destination to be used by the listener thread
ListenerPort.mbean.maxSessions.displayName=Maximum sessions
ListenerPort.mbean.maxSessions.description=Maximum concurrent number of JMS ServerSessions used by a MDB listener for processing messages  @range is 1 to MAX_INT_VALUE
ListenerPort.mbean.maxRetries.displayName=Maximum retries
ListenerPort.mbean.maxRetries.description=Maximum number of attempts to deliver a message before the MDB listener instance is stopped.  @range is 0 to MAX_INT_VALUE
ListenerPort.mbean.maxMessages.displayName=Maximum messages
ListenerPort.mbean.maxMessages.description=Maximum number of messages processed at a time by a JMS ServerSession  @range is 1 to MAX_INT_VALUE
ListenerPort.must.be.selected=You must select at least one listener port to perform this action
ListenerPort.started.succussfully=Listener port {0} started successfully.
could.not.start.ListenerPort=Listener port {0} could not be started.
ListenerPort.stopped.succussfully=Listener port {0} stopped successfully.
could.not.stop.ListenerPort=Listener port {0} could not be stopped.

WebContainer.displayName=Web Container
WebContainer.description=A Web Container handles clients requests for Web Application resources such as, but not limited to, servlets and JSP files. The web container creates servlet instances, loads and unloads servlets, creates and manages request and response objects, and performs other tasks for managing the components of a Web Application effectively.An Application Server contains only one Web Container, or none. The Web Server plug-ins, provided by the WebSphere Application Server product, gives Web Servers the capability to pass resource requests to the WebSphere Application Server Web Container. 
WebContainer.smallIcon=WebContainer.gif
WebContainer.largeIcon=WebContainer32X32.gif
WebContainer.transports.displayName=transports
WebContainer.transports.description=A list of transports defined for the web container.
webcontainer.threadpool.description=The thread pool settings for the Web container
WebContainer.sessionAffinityTimeout.displayName=sessionAffinityTimeout
WebContainer.sessionAffinityTimeout.description=When non-zero, WebSphere will be able to switch the HTTP session affinity for requests to a different server instance after the specifed time period has elapsed.  In certain situations, this can improve load balancing performance.    Default: 0  Range: 0-MAX_INT
WebContainer.sessionAffinityFailoverServer.displayName=sessionAffinityFailoverServer
WebContainer.sessionAffinityFailoverServer.description=When WLM is utilized and a server of a server group is down, WLM normally routes requests with affinity to the down server to another random server within the server group.    This field allows an administrator to specify the name of a server within the server group that affinity requests will route to, instead of using random server selection.
WebContainer.defaultVirtualHostName.displayName=defaultVirtualHostName
WebContainer.defaultVirtualHostName.description=The virtual host which will be used as the default for web applications.  This can be overridden during application installation.
WebContainer.enableServletCaching.displayName=enableServletCaching
WebContainer.enableServletCaching.description=Specifies whether servlets and jsp caching is enabled.
DB2RowSizeEnum.ROW_SIZE_4KB=ROW_SIZE_4KB
DB2RowSizeEnum.ROW_SIZE_8KB=ROW_SIZE_8KB
DB2RowSizeEnum.ROW_SIZE_16KB=ROW_SIZE_16KB
DB2RowSizeEnum.ROW_SIZE_32KB=ROW_SIZE_32KB
TuningParams.displayName=Custom Tuning Parameters
TuningParams.description=Tuning parameters for session management.
TuningParams.smallIcon=TuningParams.gif
TuningParams.largeIcon=TuningParams32X32.gif
TuningParams.invalidationSchedule.displayName=invalidationSchedule
TuningParams.invalidationSchedule.description=When enabled, specifies the two hours of a day at which invalidator process goes to the database to clean up the invalidated persistent sessions. Specify the times at which activity to their site is minimum. The purpose of this to reduce the activity to the sessions database. With this option on, the number of updates to the database which are required to keep the HttpSessions alive are reduced. If this is off, invalidator process runs every few minutes to remove invalidated HttpSessions.
TuningParams.usingMultiRowSchema.displayName=usingMultiRowSchema
TuningParams.usingMultiRowSchema.description=Specifies whether to place each instance of application data in a separate row in the database, allowing larger amounts of data to be stored per session. This can yield better performance in certain usage scenarios.  True - Place each instance of application data in a separate row of the database   False - Allow instances of application data to be placed in the same row  
TuningParams.maxInMemorySessionCount.displayName=maxInMemorySessionCount
TuningParams.maxInMemorySessionCount.description=Specifies the maximum number of sessions to maintain in memory.
TuningParams.allowOverflow.displayName=allowOverflow
TuningParams.allowOverflow.description=Specifies whether to allow the number of sessions in memory to exceed the value specified by In-memory Session Count property.  True - Allow overflow   False - Limit the number of sessions in memory to In-memory Session Count      
TuningParams.scheduleInvalidation.displayName=scheduleInvalidation
TuningParams.scheduleInvalidation.description=Specifies when to clean the invalid sessions from persistent store.
TuningParams.writeFrequency.description=This option controls when the session will be written to the persistent store.
TuningParams.writeInterval.displayName=writeInterval
TuningParams.writeInterval.description=If the Write Frequency is specified as TIME_BASED_WRITE, this value will specify how often the session data will be written to the database. It is specified in seconds and must be a positive integer in the range from 5 to 9999. When configured, InvalidationTimeout should be minimally twice as large as write interval.
TuningParams.writeContents.description=Whether only updated attributes should be written to the persistent store or all of the session attributes should be written to the persistent store, whether or not they have changed.    If you specify only updated attributes, only the updated attributes will be written to the persistent store  If you specify all session attributes, all attributes will be written to the persistent store.
TuningParams.invalidationTimeout.displayName=invalidationTimeout
TuningParams.invalidationTimeout.description=Specifies the time interval a session is allowed to go unused before it will no longer be considered valid.  -1 specifies that the session will not be invalidated.  This value is used as a default when the session timeout is not specified in a web application's deployment descriptor.  To preserve performance, the invalidation timer is not accurate "to the second." It is safe to assume that the timer is accurate to within two minutes.  When Write Frequency is time based, this value should be minimally twice as large as write interval.
WriteFrequencyEnum.END_OF_SERVLET_SERVICE=END_OF_SERVLET_SERVICE
WriteFrequencyEnum.MANUAL_UPDATE=MANUAL_UPDATE
WriteFrequencyEnum.TIME_BASED_WRITE=TIME_BASED_WRITE
WriteContentsEnum.ONLY_UPDATED_ATTRIBUTES=ONLY_UPDATED_ATTRIBUTES
WriteContentsEnum.ALL_SESSION_ATTRIBUTES=ALL_SESSION_ATTRIBUTES
InvalidationSchedule.displayName=InvalidationSchedule
InvalidationSchedule.description=When enabled, specifies the two hours of a day at which invalidator process goes to the database to clean up the invalidated persistent sessions. Specify the times at which activity to their site is minimum. The purpose of this to reduce the activity to the sessions database. With this option on, the number of updates to the database which are required to keep the HttpSessions alive are reduced. If this is off, invalidator process runs every few minutes to remove invalidated HttpSessions.
InvalidationSchedule.smallIcon=InvalidationSchedule.gif
InvalidationSchedule.largeIcon=InvalidationSchedule32X32.gif
InvalidationSchedule.firstHour.displayName=firstHour
InvalidationSchedule.firstHour.description=The first hour during which the invalid sessions will be cleared from the external location. This value must be a positive integer between 0 and 23. This is valid only when schedule invalidation is enabled.
InvalidationSchedule.secondHour.displayName=secondHour
InvalidationSchedule.secondHour.description=The second hour during which the invalid sessions will be cleared from the external location. This value must be a positive integer between 0 and 23. This is valid only when schedule invalidation is enabled.
HTTPTransport.displayName=HTTP Transport
HTTPTransport.description=An HTTP transport for communicating requests to the web container.
HTTPTransport.smallIcon=HTTPTransport.gif
HTTPTransport.largeIcon=HTTPTransport32X32.gif
DRSSettings.displayName=Internal Messaging
DRSSettings.description=Configuring Memory to Memory session replication.
DRSSettings.smallIcon=DRSSettings.gif
DRSSettings.largeIcon=DRSSettings32X32.gif
DRSSettings.dataReplicationMode.displayName=dataReplicationMode
DRSSettings.dataReplicationMode.description=Determines whether a WebSphere instance only sends data via internal replication, receives it, or both.  The default mode is both.
DRSSettings.messageBrokerDomainName.displayName=messageBrokerDomainName
DRSSettings.messageBrokerDomainName.description=The internal replication domain used by this websphere instance.
DRSSettings.preferredLocalDRSBrokerName.displayName=preferredLocalDRSBrokerName
DRSSettings.preferredLocalDRSBrokerName.description=The specific replicator within a replication domain this websphere instance initially connects to.
DRSSettings.overrideHostConnectionPoints.displayName=overrideHostConnectionPoints
DRSSettings.overrideHostConnectionPoints.description=Allow the setting of any replicators specific IP address and ports (vs picking from the replication domain in the cell.
DRSSettings.hostPort.error=Invalid or mismatched hosts and ports. Each specified host must have a corresponding port number.
SessionPersistenceKind.NONE=NONE
SessionPersistenceKind.DATABASE=DATABASE
SessionPersistenceKind.DATA_REPLICATION=DATA_REPLICATION

Server.displayName=Server
Server.description=A property on the Server model that identifies the Context name for a model context. This is to support the concept of configuration value inheritance such that if the config value is not set in the Server context, the runtime will consult the model identified in the modelId property (if any) for the setting.
Server.smallIcon=Server.gif
Server.largeIcon=Server32X32.gif
Server.customServices.displayName=Custom Services
Server.customServices.description=Define custom service classes that will run within this server and their configuration properties.
Server.components.displayName=Server Components
Server.components.description=Additional runtime components which are configurable.
Server.components.ServerComponent.displayName=Server Components
Server.extensions.displayName=Extensions
Server.started=Started
Server.stopped=Stopped
Service.displayName=Service
Service.description=Specifies the configuration settings for a service which executes within the application server.
Service.smallIcon=Service.gif
Service.largeIcon=Service32X32.gif
Service.context.displayName=context
Service.context.description=The context or environment that the service runs within.
Service.context.Component.displayName=Components
Service.context.Server.displayName=Servers
Service.properties.displayName=Custom Properties
Service.properties.description=Additional custom properties for this service which may be configurable.
Service.enable.displayName=Startup
Service.enable.description=Specifies whether the server will attempt to start the specified service when the server starts.
CustomService.displayName=Custom Services
CustomService.description=Provides an extension point for configuration data for plug-in services.  Allows customers to add in custom code which will be executed during process initialization.
CustomService.smallIcon=CustomService.gif
CustomService.largeIcon=CustomService32X32.gif
CustomService.prerequisiteServices.displayName=prerequisiteServices
CustomService.prerequisiteServices.description=A list of references to other custom services defined in this process that this custom service will wait for prior to being initialized.
CustomService.externalConfigURL.displayName=External Configuration URL
CustomService.externalConfigURL.description=Specifies the URL for a custom service configuration file.
CustomService.classname.displayName=Classname
CustomService.classname.description=Specifies the class name of the service implementation. This class must implement the Custom Service interface.
CustomService.displayName.displayName=Display Name
CustomService.displayName.description=Specifies the name of the service.
CustomService.description.displayName=Description
CustomService.description.description=Describes the custom service.
CustomService.classpath.displayName=Classpath
CustomService.classpath.description=Specifies the class path used to locate the classes and jars for this service.
ThreadPool.displayName=Thread Pool
ThreadPool.description=A thread pool allows components of the server to reuse threads to eliminate the need to create new threads at runtime.Creating new threads is typically a time and resource intensive operation.
ThreadPool.smallIcon=ThreadPool.gif
ThreadPool.largeIcon=ThreadPool32X32.gif
ThreadPool.minimumSize.displayName=Minimum Size
ThreadPool.minimumSize.description=Specifies the minimum number of threads to allow in the pool.
ThreadPool.maximumSize.displayName=Maximum Size
ThreadPool.maximumSize.description=Specifies the maximum number of threads to allow in the pool.
ThreadPool.inactivityTimeout.description=Specifies the number of milliseconds of inactivity that should elapse before a thread is reclaimed.
ThreadPool.isGrowable.displayName=Is Growable
ThreadPool.isGrowable.description=Specifies whether the number of threads can increase beyond the maximum size configured for the thread pool.
MessageFormatKind.BASIC=BASIC
MessageFormatKind.ADVANCED=ADVANCED
ServiceContext.displayName=Service Context
ServiceContext.description=The context or environment that a service runs within.
ServiceContext.smallIcon=ServiceContext.gif
ServiceContext.largeIcon=ServiceContext32X32.gif
ServiceContext.services.displayName=Services
ServiceContext.services.description=The services that are provided by the container to components executing within the context of the container.  The types of services provided by a container are restricted depending on the type of container based upon a comparison of the service's scope with the scope of the container.  
ServiceContext.services.CustomService.displayName=Custom Services
Component.displayName=Component
Component.description=Represents a process containing remotely callable components.  A server represents the configuration information of a component which can execute indepedently of a parent component in its own process (like a service).  Multiple servers can execute within the JVM
Component.smallIcon=Component.gif
Component.largeIcon=Component32X32.gif
Component.properties.displayName=Custom Properties
Component.properties.description=Additional custom properties for this runtime component. Some components may make use of custom configuration properties which can be defined here.
Component.parentComponent.displayName=parentComponent
Component.parentComponent.description=Larger runtime component which contains these configuration settings.
Component.parentComponent.ServerComponent.displayName=ServerComponents
Component.components.displayName=components
Component.components.description=Additional runtime components which are configurable.
Component.components.ServerComponent.displayName=ServerComponents
Component.server.displayName=server
Component.server.description=A process (or set of processes which act as a single logical process) running on a node which provide services and resources to applications through the containers and services which are executing within it.
Agent.displayName=Agent
Agent.description=
Agent.smallIcon=Agent.gif
Agent.largeIcon=Agent32X32.gif
Server.stateManagement.displayName=State Management
Server.stateManagement.description=The ability to control the state of the managed resource. In other words, start and stop it.
Server.statisticsProvider.displayName=Statistics Provider
Server.statisticsProvider.description=The ability of the managed resource to generate performance metrics.
ManagedObject.name.displayName=Name
ManagedObject.name.description=The name to use for the managed object which represents this live object.  This managed object name acts as one component of a calculated hierarchical name that can be used with a ManagementAgent process to locate the live object's operational control interface at runtime.
ExecutionState.START=START
ExecutionState.STOP=STOP
StateManageable.displayName=StateManageable
StateManageable.description=Represents configuration settings for managed objects which have a lifecycle (start, stop, etc.)
StateManageable.smallIcon=StateManageable.gif
StateManageable.largeIcon=StateManageable32X32.gif
StateManageable.managedObject.displayName=managedObject
StateManageable.managedObject.description=The object that can be started or stopped.
StateManageable.managedObject.ServiceContext.displayName=ServiceContexts
StateManageable.initialState.displayName=Initial State
StateManageable.initialState.description=The execution state requested when the server is first started.
ServerComponent.StateManageable.initialState.description=The component execution state requested when the server is first started.
StatisticsProvider.displayName=StatisticsProvider
StatisticsProvider.description=Specifies configuration settings for managed objects which provide statistical information, such as performance data.
StatisticsProvider.smallIcon=StatisticsProvider.gif
StatisticsProvider.largeIcon=StatisticsProvider32X32.gif
StatisticsProvider.managedObject.displayName=managedObject
StatisticsProvider.managedObject.description=The object that provides performance metrics.
StatisticsProvider.managedObject.ServiceContext.displayName=ServiceContexts
StatisticsProvider.specification.displayName=specification
StatisticsProvider.specification.description=A specification string which can be used to specify performance monitoring settings for the managed object.
Extension.displayName=Extension
Extension.description=
Extension.smallIcon=Extension.gif
Extension.largeIcon=Extension32X32.gif
Extension.name.displayName=name
Extension.name.description=
Extension.configURI.displayName=configURI
Extension.configURI.description=
ServerComponent.displayName=Server Component
ServerComponent.description=This panel provides access to configuration settings related to specific types of server functionality, such as  Application Server, JMS Server, and Name Server settings.Depending on the primary type of a server, the list of server components that are configured for it may vary.
ServerComponent.smallIcon=ServerComponent.gif
ServerComponent.largeIcon=ServerComponent32X32.gif
Server.name.displayName=Name
Server.name.description=The name of the server.
Server.adminService.displayName=Administration Services
Server.adminService.description=Specify various settings for administration facility for this server, such as administrative communication protocol settings and timeouts.

AdminService.displayName=Administration Service
AdminService.description=Service logic that controls all administrative function within the managed process.
AdminService.smallIcon=AdminService.gif
AdminService.largeIcon=AdminService32X32.gif
AdminService.connectors.displayName=JMX Connectors
AdminService.connectors.description=Connectors provide a communication channel between WebSphere managed processes based on a specific communications protocol.
AdminService.connectors.HTTPConnector.displayName=HTTPConnectors
AdminService.connectors.JMSConnector.displayName=JMSConnectors
AdminService.connectors.RMIConnector.displayName=RMIConnectors
AdminService.connectors.SOAPConnector.displayName=SOAPConnectors
AdminService.preferredConnector.displayName=Preferred connector
AdminService.preferredConnector.description=Specifies the preferred JMX Connector type. Available options, such as SOAPConnector or RMIConnector, are defined using the JMX Connectors page.
AdminService.preferredConnector.HTTPConnector.displayName=HTTPConnector
AdminService.preferredConnector.JMSConnector.displayName=JMSConnector
AdminService.preferredConnector.RMIConnector.displayName=RMIConnector
AdminService.preferredConnector.SOAPConnector.displayName=SOAPConnector
AdminService.extensionMBeanProviders.displayName=Extension MBean Providers
AdminService.extensionMBeanProviders.description=A list of the libraries that contain elements that support the ExtensionMBean mechanism for extending the admin service with additional JMX MBeans.
AdminService.configRepository.displayName=Repository Service
AdminService.configRepository.description=The configuration data used by the implementation of the repository service.
AdminService.standalone.displayName=Standalone
AdminService.standalone.description=Specifies whether the server process is a participant in a Network Deployment cell or not. If true, the server does not participate in distributed administration. If false, the server participates in the Network Deployment system.
JMXConnector.displayName=JMX Connectors
JMXConnector.description=Connectors provide a communication channel between WebSphere managed processes based on a specific communications protocol.
JMXConnector.smallIcon=JMXConnector.gif
JMXConnector.largeIcon=JMXConnector32X32.gif
JMXConnector.properties.displayName=Custom Properties
JMXConnector.properties.description=Arbitrary configuration properties that apply to this JMX Connector.
jmx=JMX Connectors
ExtensionMBean.displayName=ExtensionMBean
ExtensionMBean.description=Identifies where the metadata for the MBean is located.
ExtensionMBean.smallIcon=ExtensionMBean.gif
ExtensionMBean.largeIcon=ExtensionMBean32X32.gif
ExtensionMBean.descriptorURI.displayName=descriptorURI
ExtensionMBean.descriptorURI.description=The location of the MBean's descriptor 
ExtensionMBean.type.displayName=type
ExtensionMBean.type.description=The type of the MBean.
HTTPConnector.displayName=HTTPConnector
HTTPConnector.description=A JMX Connector that supports the HTTP communications protocol.
HTTPConnector.smallIcon=HTTPConnector.gif
HTTPConnector.largeIcon=HTTPConnector32X32.gif
JMSConnector.displayName=JMSConnector
JMSConnector.description=There is no JMS Connector implemented in 5.0. This is a post-5.0 line item.
JMSConnector.smallIcon=JMSConnector.gif
JMSConnector.largeIcon=JMSConnector32X32.gif
RMIConnector.displayName=RMIConnector
RMIConnector.description=A JMX Connector that supports the RMI communications protocol.
RMIConnector.smallIcon=RMIConnector.gif
RMIConnector.largeIcon=RMIConnector32X32.gif
SOAPConnector.displayName=SOAPConnector
SOAPConnector.description=A JMX Connector that supports the SOAP communications protocol.
SOAPConnector.smallIcon=SOAPConnector.gif
SOAPConnector.largeIcon=SOAPConnector32X32.gif
RepositoryService.displayName=Repository Service
RepositoryService.description=Service logic that manages the configuration repository.
RepositoryService.smallIcon=RepositoryService.gif
RepositoryService.largeIcon=RepositoryService32X32.gif
RepositoryService.lockTimeout.displayName=Lock timeout
RepositoryService.lockTimeout.units=minutes
RepositoryService.lockTimeout.description=Specifies the number of minutes which must elapse before a lock on a repository that has not been manually unlocked is automatically unlocked.
RepositoryService.auditEnabled.displayName=Audit Enabled
RepositoryService.auditEnabled.description=Audit repository updates in the log file.
ExtensionMBeanProvider.displayName=Extension MBean Providers
ExtensionMBeanProvider.description=A library containing an implementation of a JMX MBean, and its MBean XML Descriptor file, to be used to extend the existing WebSphere managed resources in the core administrative system. 
ExtensionMBeanProvider.smallIcon=ExtensionMBeanProvider.gif
ExtensionMBeanProvider.largeIcon=ExtensionMBeanProvider32X32.gif
ExtensionMBeanProvider.extensionMBeans.displayName=extensionMBeans
ExtensionMBeanProvider.extensionMBeans.description=MBean definitions which are not included with the base WebSphere product.
ExtensionMBeanProvider.classpath.displayName=Classpath
ExtensionMBeanProvider.classpath.description=The classpath within the provider library where the MBean Descriptor can be located. The classloader needs this information to load and parse the Extension MBean XML Descriptor file.
ExtensionMBeanProvider.description.displayName=Description
ExtensionMBeanProvider.description.description=Arbitrary descriptive text for the Extension MBean Provider configuration. Use this field for any text that helps identify/differentiate the provider configuration.
ExtensionMBeanProvider.name.displayName=Name
ExtensionMBeanProvider.name.description=A name to be used to identify the Extension MBean provider library.
JMXConnector.type.displayName=Type
JMXConnector.type.description=The type of the JMX Connector

JavaProcessDef.displayName=Java Process Definition
JavaProcessDef.description=Java processes require additional information that can be passed to the Java virtual machine when spawning the process.
JavaProcessDef.smallIcon=JavaProcessDef.gif
JavaProcessDef.largeIcon=JavaProcessDef32X32.gif
JavaProcessDef.jvmEntries.displayName=jvmEntries
JavaProcessDef.jvmEntries.description=A list of configurations for Java Virtual Machines associated with this server.
JavaProcessDef.executableTargetKind.displayName=executableTargetKind
JavaProcessDef.executableTargetKind.description=Specifies whether a Java classname or the name of an executable Jar will be used as the executable target of this Java process.
JavaProcessDef.executableTarget.displayName=executableTarget
JavaProcessDef.executableTarget.description=The name of the executable target (a Java class (containing a main() method, or the name of an executable jar), depending on the executableTargetKind.
ProcessDef.displayName=Process Definition
ProcessDef.description=A process definition defines the command line information necessary to start/initialize a process.
ProcessDef.smallIcon=ProcessDef.gif
ProcessDef.largeIcon=ProcessDef32X32.gif
ProcessDef.execution.displayName=Process Execution
ProcessDef.execution.description=A set of properties that control how the operating system process executes, such as RunAs permissions, Umask, process priority.
ProcessDef.ioRedirect.displayName=Process Logs
ProcessDef.ioRedirect.description=A set of properties that control how the process native input/output streams are directed.
ProcessDef.environment.displayName=Environment Entries
ProcessDef.environment.description=A list of settings to be added to the execution environment for the process.
ProcessDef.monitoringPolicy.displayName=Monitoring Policy
ProcessDef.monitoringPolicy.description=A set of properties that control how the process is monitored by the node agent.
ProcessDef.executableName.displayName=Executable name
ProcessDef.executableName.description=Specifies the executable name of the process.
ProcessDef.executableArguments.displayName=Executable arguments
ProcessDef.executableArguments.description=Specifies executable commands that run when the process starts.
ProcessDef.workingDirectory.displayName=Working directory
ProcessDef.workingDirectory.description=Specifies the file system directory in which the process will run.
ProcessExecution.displayName=Process Execution
ProcessExecution.description=Configuration for additional process execution settings. These values are not utilized on the Windows platform.
ProcessExecution.smallIcon=ProcessExecution.gif
ProcessExecution.largeIcon=ProcessExecution32X32.gif
ProcessExecution.processPriority.displayName=Process Priority
ProcessExecution.processPriority.description=Specifies the operating system priority for the process. Only root users can change this value.
ProcessExecution.umask.displayName=UMASK
ProcessExecution.umask.description=Specifies the user mask that the process runs under (the file-mode permission mask).
ProcessExecution.runAsUser.displayName=Run As User
ProcessExecution.runAsUser.description=Specifies the user that the process runs as.
ProcessExecution.runAsGroup.displayName=Run As Group
ProcessExecution.runAsGroup.description=Specifies the group that the process is a member of and runs as.
ProcessExecution.runInProcessGroup.displayName=Run In Process Group
ProcessExecution.runInProcessGroup.description=Specifies a process for a specific process group. This is useful for such things as processor partitioning. A system admininistor can assign a process group to run on, for example, 6 of 12 processors. The default (0) is not to assign the process to any specific group.
OutputRedirect.displayName=Output Redirect
OutputRedirect.description=Redirects standard in, out, err streams to files specified here.
OutputRedirect.smallIcon=OutputRedirect.gif
OutputRedirect.largeIcon=OutputRedirect32X32.gif
OutputRedirect.stdinFilename.displayName=stdin Filename
OutputRedirect.stdinFilename.description=Redirects file io for standard streams.
OutputRedirect.stdoutFilename.displayName=stdout Filename
OutputRedirect.stdoutFilename.description=Specifies the file to which the standard output stream will be directed. The file name can include a symbolic path name defined in the variable entries.
OutputRedirect.stderrFilename.displayName=stderr Filename
OutputRedirect.stderrFilename.description=Specifies the file to which the standard error stream will be directed. The file name can include a symbolic path name defined in the variable entries.
JavaVirtualMachine.displayName=Java Virtual Machine
JavaVirtualMachine.description=Advanced Java virtual machine settings.
JavaVirtualMachine.smallIcon=JavaVirtualMachine.gif
JavaVirtualMachine.largeIcon=JavaVirtualMachine32X32.gif
JavaVirtualMachine.systemProperties.displayName=Custom Properties
JavaVirtualMachine.systemProperties.description=Java system properties to be set in the memory for this JVM.
ManagedObject.stateManagement.description=The ability to control the state of the managed resource. In other words, start and stop it.
JavaVirtualMachine.classpath.displayName=Classpath
JavaVirtualMachine.classpath.description=Specifies the standard class path in which the Java virtual machine looks for classes.
JavaVirtualMachine.bootClasspath.displayName=Boot Classpath
JavaVirtualMachine.bootClasspath.description=Specifies bootstrap classes and resources for a JVM. This option is only available for JVMs that support bootstrap classes and resources. You might separate multiple paths by a colon (:) or semi-colon (;), depending on operating system of the node.
JavaVirtualMachine.verboseModeClass.displayName=Verbose class loading
JavaVirtualMachine.verboseModeClass.description=Specifies whether to use verbose debug output for class loading. The default is not to enable verbose class loading.
JavaVirtualMachine.verboseModeGarbageCollection.displayName=Verbose garbage collection
JavaVirtualMachine.verboseModeGarbageCollection.description=Specifies whether to use verbose debug output for garbage collection. The default is not to enable verbose garbage collection.
JavaVirtualMachine.verboseModeJNI.displayName=Verbose JNI
JavaVirtualMachine.verboseModeJNI.description=Specifies whether to use verbose debug output for native method invocation. The default is not to enable verbose JNI.
JavaVirtualMachine.initialHeapSize.displayName=Initial Heap Size
JavaVirtualMachine.initialHeapSize.description=Specifies the initial heap size available to the JVM (in megabytes). 
JavaVirtualMachine.maximumHeapSize.displayName=Maximum Heap Size
JavaVirtualMachine.maximumHeapSize.description=Specifies the maximum heap size available to the JVM, in megabytes.  The default is 256.
JavaVirtualMachine.runHProf.displayName=Run HProf
JavaVirtualMachine.runHProf.description=Specifies whether to use HProf profiler support. To use another profiler, specify the custom profiler's settings using the HProf Arguments setting.  The default is not to enable HProf profiler support.
JavaVirtualMachine.hprofArguments.displayName=HProf Arguments
JavaVirtualMachine.hprofArguments.description=Specifies command-line profiler arguments to pass to the Java virtual machine that starts the application server process. You can specify arguments when HProf profiler support is enabled.
JavaVirtualMachine.debugMode.displayName=Debug Mode
JavaVirtualMachine.debugMode.description=Specifies whether to use the JVM debug output. The default is not to enable debug mode support.
JavaVirtualMachine.debugArgs.displayName=Debug arguments
JavaVirtualMachine.debugArgs.description=Specifies command-line debug arguments to pass to the Java virtual machine that starts the application server process. You can specify arguments when Debug Mode is enabled.
JavaVirtualMachine.genericJvmArguments.displayName=Generic JVM arguments
JavaVirtualMachine.genericJvmArguments.description=Additional command line arguments for the JVM.
JavaVirtualMachine.executableJarFileName.displayName=Executable JAR file name
JavaVirtualMachine.executableJarFileName.description=Specifies a full path name for an executable jar file that the Java virtual machine uses.
JavaVirtualMachine.disableJIT.displayName=Disable JIT
JavaVirtualMachine.disableJIT.description=Configure the JVM such that the Just-In-Time (JIT) compiler is disabled.
JavaVirtualMachine.osName.displayName=Operating system name
JavaVirtualMachine.osName.description=Specifies JVM settings for a given operating system. When started, the process will use the JVM settings for the operating system of the node.
MonitoringPolicy.displayName=MonitoringPolicy
MonitoringPolicy.description=Policy settings for performance monitoring of the application server..
MonitoringPolicy.smallIcon=MonitoringPolicy.gif
MonitoringPolicy.largeIcon=MonitoringPolicy32X32.gif
MonitoringPolicy.maximumStartupAttempts.displayName=Maximum startup attempts
MonitoringPolicy.maximumStartupAttempts.units=attempts
MonitoringPolicy.maximumStartupAttempts.description=Specifies the maximum number of times to attempt to start the application server before giving up.
MonitoringPolicy.pingInterval.displayName=Ping interval
MonitoringPolicy.pingInterval.units=seconds
MonitoringPolicy.pingInterval.description=Specifies the frequency of communication attempts between the parent process, such as the node agent, and the process it has spawned, such as an application server. Adjust this value based on your requirements for restarting failed servers. Decreasing the value detects failures sooner; increasing the value reduces the frequency of pings, reducing system overhead.
MonitoringPolicy.pingTimeout.displayName=Ping timeout
MonitoringPolicy.pingTimeout.units=seconds
MonitoringPolicy.pingTimeout.description=The interval after which no response from the monitored process is assumed to indicate that it is faulty.
MonitoringPolicy.pingInitialTimeout.displayName=Ping initial timeout
MonitoringPolicy.pingInitialTimeout.units=seconds
MonitoringPolicy.pingInitialTimeout.description=Specifies the maximum time in seconds for the server to finish initialization. After this time elapses, the administrative server attempts to restart the server.
MonitoringPolicy.autoRestart.displayName=Automatic restart
MonitoringPolicy.autoRestart.description=Specifies whether the process should restart automatically if it fails. The default is to restart the process automatically.
MonitoringPolicy.nodeRestartState.displayName=Node restart state
MonitoringPolicy.nodeRestartState.description=Specifies the processing state attained if autoRestart is enabled.  The options are: STOPPED, RUNNING, PREVIOUS. The default is STOPPED.
ExecutableTargetKind.JAVA_CLASS=JAVA_CLASS
ExecutableTargetKind.EXECUTABLE_JAR=EXECUTABLE_JAR
RestartStateKind.STOPPED=STOPPED
RestartStateKind.RUNNING=RUNNING
RestartStateKind.PREVIOUS=PREVIOUS

Server.services.DebugService.displayName=Debugging Service
Server.services.DebugService.description=Specify settings for the debugging service, to be used in conjunction with a workspace debugging client application.
DebugService.displayName=Debugging Service
DebugService.description=A model of the attributes needed for debugging a JVM and various components, such as the BSF Manager
DebugService.smallIcon=DebugService.gif
DebugService.largeIcon=DebugService32X32.gif
DebugService.jvmDebugPort.displayName=JVM debug port
DebugService.jvmDebugPort.description=The port that the JVM will listen on for debug connections.  
DebugService.jvmDebugArgs.displayName=JVM debug arguments
DebugService.jvmDebugArgs.description=The debug argument string used to tell the JVM to start in debug mode.  
DebugService.debugClassFilters.displayName=Debug class filters
DebugService.debugClassFilters.description=The is an array of classes to filter out during debugging.   When running in step by step mode the debugger will not stop in classes that match a filter entry.  
DebugService.BSFDebugPort.displayName=BSF debug port
DebugService.BSFDebugPort.description=The port to start the BSF debug manager listening on.  
DebugService.BSFLoggingLevel.displayName=BSF logging level
DebugService.BSFLoggingLevel.description=The level of logging the BSF Debug Manager will provide.
servermanagement.button.add=Add>
BSFLoggingLevel.NOLOGGING=0-No logging
BSFLoggingLevel.SOMELOGGING=1-some logging 
BSFLoggingLevel.MORELOGGING=2-more logging
BSFLoggingLevel.LOTOFLOGGING=3-a lot of logging
DebugService.portchanged.info1=DebugService JVMdebugArgs were changed to sync it with DebugService debugPort specified
DebugService.portchanged.info2= DebugService JVMdebugPort was changed to sync it with JVM debugargs port specified with address

JMSServer.displayName=JMS Servers
JMSServer.description=The JMS functions on a node within the WebSphere Application Server administration domain are served by the JMS server on that node.  Use this panel to view or change the configuration properties of the selected JMS server.
JMSServer.smallIcon=JMSServer.gif
JMSServer.largeIcon=JMSServer32X32.gif
JMSServer.securityPort.displayName=Security Port Endpoint
JMSServer.securityPort.description=The TCP/IP port number of the listener port used internally by the JMS server.
JMSServer.description.displayName=Description
JMSServer.description.description=A description of the JMS server, for administrative purposes.
JMSServer.numThreads.displayName=Number of threads
JMSServer.numThreads.description=The number of concurrent threads to be used by the Pub/Sub matching engine.
JMSServer.queueNames.displayName=Queue names
JMSServer.queueNames.description=The names of queues hosted by this JMS server.
JMSServer.must.be.selected=You must select at least one JMS Server to perform this action
jmsserver.cannot.be.started=JMSServer cannot be started since Embedded Messaging was not installed on node {0}.
JMSTransport.displayName=JMSTransport
JMSTransport.description=
JMSTransport.smallIcon=JMSTransport.gif
JMSTransport.largeIcon=JMSTransport32X32.gif
EndPoint.displayName=Security Port Endpoint
EndPoint.description=Security Port Endpoint description
EndPoint.host.displayName=Host
EndPoint.host.description=The IP address, DNS host name with domain name suffix, or just the DNS host name, used by a client to request a Web application resource (such as a servlet, JSP, or HTML page).
EndPoint.port.displayName=Port
EndPoint.port.description=The port for which the Web server has been configured to accept client requests. Specify a port value in conjunction with the host name.

NameServer.displayName=Name Server
NameServer.description=Naming service provider settings for the application server.
NameServer.smallIcon=NameServer.gif
NameServer.largeIcon=NameServer32X32.gif
NameServer.bootstrapServerAddress.displayName=bootstrapServerAddress
NameServer.bootstrapServerAddress.description=The bootstrap server address is the endpoint for the name server's boostrap server. An endpoint includes a host name and port number.  Naming clients specify the bootstrap server host and port to obtain an initial naming context from the associated name server.

Service.type.displayName=Service Type
Service.type.description=The type of service.
nav.websphere.servers    
Domain.webcontainers.displayName=Web Containers

webcontainer.description=Configure the Web Container
webcontainer.detail.title=Web Container
webcontainer.displayName=Web Container
webcontainer.threadpool.displayName=Thread Pool
webcontainer.sessionmanager.displayName=Session Management
webcontainer.sessionmanager.description=Configure the session manager associated with this webcontainer
webcontainer.httptransports.displayName=HTTP transports
webcontainer.httptransports.description=Configure the HTTP transports associated with this webcontainer
webcontainer.virtualhost.displayName=Default virtual host:
webcontainer.virtualhost.description=The default virtual host for this server
webcontainer.enableServletCaching.displayName=Servlet caching
webcontainer.enableServletCaching.description=Enable servlet caching.
webcontainer.enableServletCaching.units=Enable servlet caching


ThreadPool.size.units=threads
ThreadPool.inactivityTimeout.displayName=Thread inactivity timeout
ThreadPool.inactivityTimeout.units=milliseconds
ThreadPool.isGrowable.units=Allow thread allocation beyond maximum thread size

SessionManager.sessionTracking.displayName=Session tracking mechanism:
SessionManager.displayName=Session Management
SessionManager.sessionDatabasePersistence.description=Specify tuning parameters in a distributed environment
SessionManager.tuningParams.displayName=Custom Tuning Parameters
SessionManager.description=Session manager configuration properties allow you to control the behavior of HTTP session support
SessionManager.sessionTracking.description=Specify a mechanism for HTTP session management.
SessionManager.overflow.displayName=Overflow:
SessionManager.overflow.description=Whether to allow the number of sessions in memory to exceed the value specified by Max In Memory Session Count property. This is valid only in non-persistent sessions mode.
SessionManager.overflow.units=Allow overflow
SessionManager.sessionCount.displayName=Maximum in-memory session count:
SessionManager.sessionCount.description=Specifies the maximum number of sessions to maintain in memory.
SessionManager.sessionTimeout.displayName=Session timeout:
SessionManager.sessionTimeout.description=Specifies how long a session is allowed to go unused before it will be considered valid no longer.   Specify either "Set timeout" or "No timeout." If you select to set the timeout, the value must be at least two minutes, specified in minutes.
SessionManager.sessionTimeout.noTimeout=No timeout
SessionManager.sessionTimeout.setTimeout=Set timeout
SessionManager.sessionTimeout.units=minutes
SessionManager.sessionTracking.sslEnabled=Enable SSL ID tracking
SessionManager.sessionTracking.cookiesEnabled=Enable Cookies
SessionManager.sessionTracking.urlRewritingEnabled=Enable URL Rewriting
SessionManager.sessionTracking.protocolRewritingEnabled=Enable protocol switch rewriting
SessionManager.sessionCount.units=sessions
SessionManager.button.modify=Modify...
SessionManager.defaultCookieSettings.displayName=Cookie Settings
SessionManager.persistence.displayName=Distributed Environment Settings
SessionManager.persistence.description=Specify sessions persistence type.
SessionManager.serialAccess.displayName=Serialize session access:
SessionManager.serialAccess.description=Serialize session access indicates whether to disallow concurrent session access in a given server (JVM).
SessionManager.serialAccess.units=Allow serial access
SessionManager.maxWaitTime.displayName=Maximum wait time
SessionManager.maxWaitTime.description=Maximum wait time description
SessionManager.maxWaitTime.units=seconds
SessionManager.accessOnTimeout.displayName=Session access on timeout
SessionManager.accessOnTimeout.description=Timeout description
SessionManager.accessOnTimeout.units=Allow access on timeout
SessionManager.enable.displayName=Overwrite Session Management
SessionManager.enable.description=Specifies whether this SessionManager settings are to be used for the current module. Default is to use Session Manager settings defined on parent object.
SessionManager.enable.units=Overwrite
SessionManager.securityIntegration.displayName=Security integration
SessionManager.securityIntegration.description=When security integration is enabled, the Session Manager will associate the identity of users with their HTTP sessions.
SessionManager.securityIntegration.units=Enable

Cookie.displayName=Cookies
Cookie.description=Specify cookie settings for http session management.
Cookie.secure.displayName=Secure cookies
Cookie.secure.units=Restrict cookies to HTTPS sessions
Cookie.domain.displayName=Cookie domain
Cookie.maximumAge.displayName=Cookie maximum age
Cookie.path.displayName=Cookie path
Cookie.name.displayName=Cookie name
Cookie.name.description=A unique name for the cookie to be used for session management.  The servlet specification requires this name to be JSESSIONID. However, for flexibilty this value is configurable.
Cookie.secure.description=Whether session cookies include the secure field. Enabling the feature will restrict the exchange of cookies only to HTTPS sessions.
Cookie.domain.description=The value of the domain field of a session tracking cookie. This value will dictate to the browser whether or not to send a cookie to particular servers. For example, if you specify a particular domain, session cookies will be sent only to hosts in that domain. The default domain is the server.
Cookie.maximumAge.description=The amount of time that the cookie will live on the client browser. This value corresponds to the Time to Live (TTL) value described in the Cookie specification.  
Cookie.path.description=This dictates browser whether cookie is sent to the URI requested based on the path. Specify any string representing a path on the server. "/" indicates root directory.   Specify a value in order to restrict the paths to which the cookie will be sent. By restricting paths, you can keep the cookie from being sent to certain URLs on the server. If you specify the root directory, the cookie will be sent no matter which path on the given server is accessed.
Cookie.age.browserSession=Current browser session 
Cookie.age.maximumAge=Set maximum age
Cookie.age.units=seconds

Persistence.displayName=Distributed Sessions
Persistence.description=Specify a type for saving session in a distributed environment.
Persistence.button.modify=Modify...
Persistence.button.advanced=Advanced...
Persistence.none=None
Persistence.database=Database
Persistence.messaging=Memory to Memory Replication
Persistence.domain=Internal Messaging Domain:

SessionManager.sessionDRSPersistence.displayName=DRS Settings
DRSSettings.both=Both client and server
DRSSettings.bothpp=Both push and pull
DRSSettings.pull=Pull only
DRSSettings.push=Push only
DRSSettings.none=Not Shared
DRSSettings.client=Client only
DRSSettings.server=Server only
DRSSettings.replication.domainSelection=Select replicator from the following domain
DRSSettings.replication.replicators=Replicators: 
DRSSettings.replication.otherDomain=Select replicator from another domain
DRSSettings.replication.address=IP Address:
DRSSettings.replication.port=Port :
DRSSettings.replication.description=Select a replicator to be used for Memory to Memory replication.
DRSSettings.replication.displayName=Replication :
DRSSettings.partition.displayName=Listen to partition IDs :
DRSSettings.partition.description=Partitions to which this Session Manager when running in Server mode would listen to for Memory to Memory session replication.  The number of partitions is defined in the Manage Internal Replication pages.  The default is to listen to all partitions.
DRSSettings.mode.displayName=Runtime mode :
DRSSettings.mode.description=Specifies the mode at which you want the data replication controlled.
DRSSettings.frequency.displayName=Push frequency
DRSSettings.frequency.description=Specifies the time in seconds to wait before pushing new or modified cache entries to other servers.
DRSSettings.frequency.units=seconds
DRSSettings.messaging.displayName=Internal messaging server
DRSSettings.messaging.description=Specifies a domain from which your data will be replicated.
DRSSettings.noDomains.error=No replication domains have been defined


SessionDatabasePersistence.displayName=Database Settings
SessionDatabasePersistence.description=Database Settings description
SessionDatabasePersistence.datasourceJNDIName.displayName=Datasource JNDI name:
SessionDatabasePersistence.datasourceJNDIName.description=Specifies the JNDI name of the data source from which the Session Manager will obtain database connections.
SessionDatabasePersistence.userId.displayName=User ID:
SessionDatabasePersistence.userId.description=The user ID for database access.
SessionDatabasePersistence.password.displayName=Password:
SessionDatabasePersistence.password.description=The password for database access.
SessionDatabasePersistence.password2.displayName=Confirm Password:
SessionDatabasePersistence.password2.description=Type the password a second time to ensure it recorded correctly.
SessionDatabasePersistence.db2RowSize.displayName=DB2 row size:
SessionDatabasePersistence.db2RowSize.description=The tablespace page size configured for the sessions table, if using a DB2 database. Possible values are 4, 8, 16, and 32 kilobytes (K). The default row size is 4K.
SessionDatabasePersistence.tableSpaceName.displayName=Table space name:
SessionDatabasePersistence.tableSpaceName.description=Tablespace to be used for the sessions table.
SessionDatabasePersistence.multiRowSchema.displayName=Multi row schema
SessionDatabasePersistence.multiRowSchema.description=Whether to place each instance of application data in a separate row in the database.
SessionDatabasePersistence.multiRowSchema.units=Use Multi row schema
SessionDatabasePersistence.passwords.match.error=The passwords do not match. Please re-enter both password fields


Tuning.displayName=Tuning Parameters
Tuning.description=Session Manager provides various tuning options for managing session data in a distributed environment.
Tuning.level.displayName=Tuning level:
Tuning.level.description=The Session Manager provides certain predefined settings that affect performance.
Tuning.setting.veryHigh=Very high (optimize for performance)
Tuning.setting.high=High
Tuning.setting.medium=Medium
Tuning.setting.low=Low (optimize for failover)
Tuning.setting.custom=Custom settings
Tuning.button.modify=Modify...

TuningParams.contents.all=All session attributes
TuningParams.contents.updated=Only updated attributes
TuningParams.frequency.servlet=End of servlet service
TuningParams.frequency.manual=Manual update
TuningParams.frequency.units=seconds
TuningParams.frequency.timeBased=Time based:
TuningParams.database.displayName=Specify distributed sessions cleanup schedule
TuningParams.database.first=First time of day (0-23):
TuningParams.database.second=Second time of day (0-23):
TuningParams.writeFrequency.displayName=Write frequency
TuningParams.writeContents.displayName=Write contents
TuningParams.cleanup.displayName=Schedule sessions cleanup:
TuningParams.cleanup.description=Specifies when to clean the invalid sessions from external location.

Transport.host.displayName=Host
Transport.port.displayName=Port            
Transport.host.description=Specifies the host IP address to which to bind for the transport.
Transport.port.description=Specifies the port to which to bind for the transport. Specify a port number between 1 and 65535. The port number must be unique for each application server instance on a given machine.
Transport.sslEnabled.units=Enable SSL

DynamicCache.startup.displayName=Startup state:
DynamicCache.startup.description=Click the check box to enable the dynamic cache service at the time of server startup.
DynamicCache.startup.units=Enable service at server startup
DynamicCache.cacheSize.displayName=Cache size
DynamicCache.defaultPriority.displayName=Default Priority
DynamicCache.diskoffload.displayName=Disk offload:
DynamicCache.diskoffload.description=By default, the dynamic cache only maintains, at most, the number of entries configured in memory. If new entries are created while the cache is full, the priorities configured for each cache entry, along with a least recently used algorithm, are used to remove entries from the cache. As an alternative, disk offload can be configured and rather than removing the entries from memory, they will be copied onto the file system (the location is configurable) and can be accessed later.
DynamicCache.diskoffload.enable=Enable disk offload
DynamicCache.diskoffload.location=Offload location:
DynamicCache.diskoffload.hashSize=Hash size:
DynamicCache.cachereplication.displayName=Cache replication:
DynamicCache.cachereplication.description=Enable cache replication here.
DynamicCache.cachereplication.enable=Enable cache replication
DynamicCache.cachereplication.advanced=Advanced...
DynamicCache.cacheGroups.displayName=External Cache Groups

ExternalCacheGroup.name.displayName=Name
ExternalCacheGroup.type.displayName=Type
ExternalCacheGroup.displayName=External Cache Group
ExternalCacheGroup.members.displayName=External Cache Group Members

ExternalCacheGroupMember.address.displayName=Address
ExternalCacheGroupMember.adapterBeanName.displayName=Adapter Bean Name

ObjectRequestBroker.displayName=ORB Service
ObjectRequestBroker.description=Configuration settings for the object request broker (ORB).
ObjectRequestBroker.smallIcon=ObjectRequestBroker.gif
ObjectRequestBroker.largeIcon=ObjectRequestBroker32X32.gif
ObjectRequestBroker.interceptors.displayName=interceptors
ObjectRequestBroker.interceptors.description=List of interceptors the ORB will invoke during every IIOP request.
ObjectRequestBroker.plugins.displayName=plugins
ObjectRequestBroker.plugins.description=List of plugins the ORB will invoke during ORB initialization.
ObjectRequestBroker.lsdConnection.displayName=lsdConnection
ObjectRequestBroker.lsdConnection.description=A reference to the Location Service Daemon, used by the ORB when necessary to resolve indirect IORs.
ObjectRequestBroker.threadPool.displayName=Thread Pool
ObjectRequestBroker.threadPool.description=Thread pool settings for the orb.
ObjectRequestBroker.ssl.displayName=ssl
ObjectRequestBroker.ssl.description=Specifies Server Secure Socket Layer settings.
ObjectRequestBroker.requestTimeout.displayName=Request timeout
ObjectRequestBroker.requestTimeout.units=seconds
ObjectRequestBroker.requestTimeout.description=The number of seconds to wait before timing out on a request message.
ObjectRequestBroker.requestRetriesCount.displayName=Request retries count
ObjectRequestBroker.requestRetriesCount.units=retries
ObjectRequestBroker.requestRetriesCount.description=The number of times that the ORB attempts to send a request if a server fails. Retrying sometimes enables recovery from transient network failures.
ObjectRequestBroker.requestRetriesDelay.displayName=Request retries delay
ObjectRequestBroker.requestRetriesDelay.units=milliseconds
ObjectRequestBroker.requestRetriesDelay.description=The number of milliseconds between request retries.
ObjectRequestBroker.connectionCacheMaximum.displayName=Connection cache maximum
ObjectRequestBroker.connectionCacheMaximum.units=connections
ObjectRequestBroker.connectionCacheMaximum.description=Largest number of connections allowed to occupy the service's connection cache.
ObjectRequestBroker.connectionCacheMinimum.displayName=Connection cache minimum
ObjectRequestBroker.connectionCacheMinimum.units=connections
ObjectRequestBroker.connectionCacheMinimum.description=Smallest number of connections allowed to occupy the service's connection cache.
ObjectRequestBroker.commTraceEnabled.displayName=ORB tracing
ObjectRequestBroker.commTraceEnabled.description=Tracing of ORB GIOP messages. This setting is ignored if ORB tracing is not enabled.
ObjectRequestBroker.locateRequestTimeout.displayName=Locate request timeout
ObjectRequestBroker.locateRequestTimeout.description=The number of seconds to wait before timing out on a LocateRequest message.
ObjectRequestBroker.forceTunnel.displayName=Force tunnel
ObjectRequestBroker.forceTunnel.description=Controls how the client ORB attempts to use HTTP tunneling.
ForceTunnelMode.WHENREQUIRED=WHENREQUIRED
ForceTunnelMode.ALWAYS=ALWAYS
ForceTunnelMode.NEVER=NEVER                             
ObjectRequestBroker.tunnelAgentURL.displayName=Tunnel agent URL
ObjectRequestBroker.tunnelAgentURL.description=The URL of the servlet used to support HTTP tunneling.It is required only if the field \"Force tunnel\" is set to ALWAYS or WHENREQUIRED.Otherwise, it is ignored by the ORB.
ObjectRequestBroker.noLocalCopies.displayName=Pass by reference
ObjectRequestBroker.noLocalCopies.description=When enabled, this specifies that the ORB is to pass parameters by reference instead of by value, which bypasses a copy operation. Enable this property with caution, because unexpected behavior might occur.
ObjectRequestBroker.externalConfigURL.displayName=externalConfigURL
ObjectRequestBroker.externalConfigURL.description=No description for this property was available.
ObjectRequestBroker.properties.description=Additional custom properties for this service which may be configurable. Additional custom ORB properties may be added in this panel. However, it is strongly recommended that you do not modify or delete any of the default values set during product installation unless directed to do so by IBM technical support personnel.
ORBPlugin.displayName=ORBPlugin
ORBPlugin.description=Custom code can be specified to extend the ORB.  A plugin captures the class that contains the custom logic.  During server initialization, the server will take the name of the plugin, prepend com.ibm.CORBA.ORBPluginClass.XXX
ORBPlugin.smallIcon=ORBPlugin.gif
ORBPlugin.largeIcon=ORBPlugin32X32.gif
ORBPlugin.name.displayName=name
ORBPlugin.name.description=The ***unqualified*** class name of the plugin to load and initialize.
Interceptor.displayName=Interceptor
Interceptor.description=Interceptors are invoked by the ORB during every IIOP request.
Interceptor.smallIcon=Interceptor.gif
Interceptor.largeIcon=Interceptor32X32.gif
Interceptor.name.displayName=name
Interceptor.name.description=Interceptor's class name.
LSDConnection.displayName=LSDConnection
LSDConnection.description=Specifies the properties used to connect to a LocationServiceDaemon.  A LSD is a server, listening on a fixed port, that processes requests to locate persistent object references and redirects clients to the appropriate application server.  See the LocationServiceDaemonServer server for LSD server process configuration.
LSDConnection.smallIcon=LSDConnection.gif
LSDConnection.largeIcon=LSDConnection32X32.gif
LSDConnection.endPoint.displayName=endPoint
LSDConnection.endPoint.description=
LSDConnection.mode.displayName=mode
LSDConnection.mode.description=The location service daemon's mode.
LSDMode.NONE=NONE
LSDMode.IMPLICIT_CLIENT=IMPLICIT_CLIENT
LSDMode.EXPLICIT_CLIENT=EXPLICIT_CLIENT
LSDMode.PROVIDER=PROVIDER

Server.errorStreamRedirect.displayName=Error Stream Redirect
Server.errorStreamRedirect.description=Stream redirection settings for System.err
Server.outputStreamRedirect.displayName=Output Stream Redirect
Server.outputStreamRedirect.description=Stream redirection settings for System.out
Server.clusterName.displayName=Cluster Name
Server.clusterName.description=Specify the cluster name if the server is part of a cluster.
Server.modelId.displayName=modelId
Server.modelId.description=
StreamRedirect.displayName= Stream Redirect
StreamRedirect.description=Specifies settings for redirecting standard Java IO streams.
StreamRedirect.smallIcon=StreamRedirect.gif
StreamRedirect.largeIcon=StreamRedirect32X32.gif
StreamRedirect.fileName.displayName=File Name
StreamRedirect.fileName.description=Specify the name of the file to which the stream should be redirected.
StreamRedirect.rolloverType.displayName=Rollover Type
StreamRedirect.rolloverType.description=Indicate what type of rollover algorithm is in effect.
StreamRedirect.maxNumberOfBackupFiles.displayName=Max Number Of Backup Files
StreamRedirect.maxNumberOfBackupFiles.description=Number of archive files.
StreamRedirect.rolloverSize.displayName=Rollover Size
StreamRedirect.rolloverSize.description=Specify the size in Megabytes for size-based rollover.
StreamRedirect.baseHour.displayName=Base Hour
StreamRedirect.baseHour.description=Specify the hours at which time-based rollover starts.
StreamRedirect.rolloverPeriod.displayName=Rollover Period
StreamRedirect.rolloverPeriod.description=Specify the time-based rollover period.
StreamRedirect.formatWrites.displayName=Format Writes
StreamRedirect.formatWrites.description=Specify whether writes should be formatted like Websphere log entry.
StreamRedirect.messageFormatKind.displayName=Message Format Kind
StreamRedirect.messageFormatKind.description=The desired format for messages. Valid values include basic and advanced. Default is basic.
StreamRedirect.suppressWrites.displayName=Suppress Writes
StreamRedirect.suppressWrites.description=Specify whether writes to this stream should be suppressed.
StreamRedirect.suppressStackTrace.displayName=Suppress Stack Trace
StreamRedirect.suppressStackTrace.description=Specify if stack traces in the messages should be replaced by the exception message only. Default is false. (no suppression)
ManagedObject.displayName=Managed Object
ManagedObject.description=Represents the configuration for an object which is manageable by an agent process.
ManagedObject.smallIcon=ManagedObject.gif
ManagedObject.largeIcon=ManagedObject32X32.gif
ManagedObject.stateManagement.displayName=State Management
ManagedObject.statisticsProvider.displayName=Statistics Provider
ManagedObject.statisticsProvider.description=The ability of the managed resource to generate performance metrics.
server.stop.title=Stopping Server
server.stop.warning1=The server is running the administration application
server.stop.warning2=If you stop the server, you will be logged out of the current HTTP session and will no longer be able to use this instance of the administrative console.
server.stop.warning3=Start the server again to use the administrative console. If security is enabled, your browser may be able to login next time without being prompted provided the LTPA cookie is still valid.  Since the LTPA cookie is for single-signon (multi-server use), it is not removed from your browser during admin console logout.
goodbye.title=Good Bye
goodbye.message1=Thanks for using the WebSphere administrative console.
Server.services.PMIService.displayName=Performance Monitoring Service
Server.services.PMIService.description=specify settings for performance monitoring, including enabling performance monitoring, selecting the PMI module and setting monitoring levels.
PMIService.displayName=Performance Monitoring Service
PMIService.description=Configuration and Runtime Settings for Performance Monitoring Infrastructure (PMI)
PMIService.smallIcon=PMIService.gif
PMIService.largeIcon=PMIService32X32.gif
PMIService.initialSpecLevel.displayName=Initial specification level
PMIService.initialSpecLevel.description=A Performance Monitoring Infrastructure (PMI) specification string that stores PMI specification levels for all components in the server.Levels N,L,M,H,X represent None,Low,Medium,High,Maximum respectively.
PMIService.modules=PMI Modules
PMIService.monitoringLevel=Monitoring Level
PMIService.specification=Specifications
PMIService.mbean.notFound=Unable to detect performance monitoring settings, please ensure that performance monitoring service is enabled for this server.
PMIService.invalidSetting=The setting for this module was not valid.
PMIService.thevalidSettings=Please enter either N (None), L (Low), M (Medium), H (High), or X (Maximum).
PMIService.LevelNone=None - All modules below set to &quot;N&quot; (None).
PMIService.LevelStandard=Standard - All modules below set to &quot;H&quot; (High)
PMIService.LevelCustom=Custom - Modify, add or remove the modules from the below list.


distmanagement.appserver.create.new=Create New Application Server
distmanagement.appserver.create.new.description=Create New Application Server
appserver.new.step1=Select an application server template
appserver.new.step2=Select a node
appserver.new.step3=Confirm new application server
distmanagement.button.edit=Edit
appserver.selectAppServer.msg1=You may either select an existing application server as a template for the new one, or use the default application server template.
appserver.selectAppServer.msg3=Select node
appserver.selectAppServer.msg4=View more information about this step
appserver.selectAppServer.msg5=The node that is selected on this step will determine the server processes available from which to choose on the next step.
appserver.selectAppServer.msg6=Logical name for server. Name must be unique within cell.
appserver.selectAppServer.msg7=Select template
appserver.selectAppServer.msg8=Existing application server
appserver.selectAppServer.msg9=Using an existing application server as a template will basically copy the configuration for the selected server.
appserver.selectAppServer.msg10=Default application server template
appserver.selectAppServer.errormsg1=Server Name is required
appserver.selectAppServer.errormsg2={0} exists within node {1}
appserver.selectAppServer.copyApps1=Map Applications 
appserver.selectAppServer.copyApps2=Map Applications from existing server template
appserver.selectAppServer.copyApps3=This option only applies when you select "Existing application server" as your template.When selected, applications which were previously installed and mapped to run on the source server will be automatically mapped to run in the new server as well, and any previous binding information (such as users and groups assignments) will be retained.This is different from installing the same application binaries into the new server with a different application name. In that case, a separate copy of binding information for the application would be maintained.
generate.unique.ports=Generate Unique Http Ports
generate.unique.ports.desc=Generates unique port numbers for every http transport that is defined in the source server, so that the resulting server that is created will not have HTTP Transports which conflict with the original server or any other servers defined on the same node.
generate.unique.ports.label=Http Ports
appserver.selectAppServer.serverName=Server name
appserver.confirmAppServer.msg1=The following is a summary of your selections. Click the Finish button to complete the application server creation.
appserver.confirmAppServer.msg2=If there are settings you wish to change, click on previous button to review server settings.
appserver.confirmAppServer.msg3=The following actions will  be completed
appserver.confirmAppServer.msg4=New application server \"{0}\" will be created on node \"{1}\", in a new server process.
appserver.confirmAppServer.msg7=Possible issues caused by this action
appserver.confirmAppServer.msg8=Ensure that the node \"{0}\" has enough memory to support several processes.If it does not have enough memory, performance will be poor.
appserver.createAppServer.msg1=New server is created successfully.
appserver.createAppServer.msg2=Modify variables, resources, and other server configuration settings, such as message broker queue names before running the newly created server.
ensure.unique.httpports=make sure that http ports are unique for the node before starting server.
error.create.server=Error occured while creating new server.

application.server.already.started={0} has already been started
node.agent.not.active=The node agent on node {0} is not active. The server can not be started. 
synch.server.before.start=The server configuration has changed. You must save the configuration to the master repository before starting the server. 
object.must.be.selected=You must select at least one application server to perform this action
application.server.not.started={0} has not been started
could.not.stop.server=An error occurred while stopping {0}. Check the error logs for more information.
server.started.successfully={0} server started successfully
server.view.jvm.logs1=View JVM logs</a> for further details.
could.not.start.server={0} server could not be started
server.stopped.successfully={0} server stopped successfully
server.should.be.stopped=Stop all servers to be deleted
deleteserver.page.title=Delete Server 
deleteserver.page.msg1=Click the OK button below to delete the following server(s).If you do not wish to delete the servers, click the CANCEL button to return to the prior  page.
error.createmq=createmq could not be run so the JMSServer will not be able to start'
error.deletemq=deleteemq operation failed
NodeAgent.not.found=System could not contact process to shut down server.Make sure that server is shut down before deleting it. 
nodes.not.present=There are no nodes that support Application Servers in the configuration.  Please use the addNode command from the <a href="navigatorCmd.do?forwardName=Node.content.main">Nodes collection </a> or from the command line before attempting to create a new Application Server.

ExecutionState.PARTIAL_STOP=Partial Stop
ExecutionState.PARTIAL_START=Partial Start
ExecutionState.STOPPING=Stopping
ExecutionState.STARTING=Starting



NamedEndPoint.displayName=End Points
NamedEndPoint.description=Configure important TCP/IP ports which this server uses for connections.
NamedEndPoint.smallIcon=NamedEndPoint.gif
NamedEndPoint.largeIcon=NamedEndPoint32X32.gif
NamedEndPoint.endPoint.displayName=End Point
NamedEndPoint.endPoint.description=
NamedEndPoint.endPointName.displayName=End Point Name
NamedEndPoint.endPointName.description=
NamedEndPoints.not.available=There are no endpoints available to be configured
SystemMessageServer.displayName=System Message Server
AppServer.displayName=Application Server

Server.productInfo.displayName=Product Information
Server.productInfo.description=Product information for this installation of WebSphere Application Server
ProductInfo.components.dislayName=Components
ProductInfo.components.description=Components installed on the current system
ProductInfo.extensions.dislayName=Extensions
ProductInfo.extensions.description=Extensions installed on the current system
ProductInfo.eFixes.dislayName=e-Fixes
ProductInfo.eFixes.description=e-Fixes installed on the current system
ProductInfo.product.name=Product Name
ProductInfo.product.id=ID
ProductInfo.product.version=Version
ProductInfo.product.buildDate=Build Date
ProductInfo.product.buildLevel=Build Level
ProductInfo.product.buildversion=Build Version
ProductInfo.product.builddate=Build Date
ProductInfo.component.name=Component Name
ProductInfo.component.specversion=Spec Version
ProductInfo.extension.name=Extension Name
ProductInfo.efix.id=e-Fix ID
ProductInfo.efix.buildversion=Build Version
ProductInfo.efix.buildDate=Build Date
ProductInfo.efix.components=Components
ProductInfo.efix.prereq=Pre-reqs
ProductInfo.efix.coreq=Co-reqs            
ProductInfo.ptfs.dislayName=PTFs
ProductInfo.ptfs.description=PTFs installed on the current system
ProductInfo.ptf.id=PTF ID
ProductInfo.ptf.products=Products
ProductInfo.productReport.dislayName=Product Report
ProductInfo.productReport.description=Displays a detailed product information report for the current state of the system.
ProductInfo.historyReport.dislayName=History Report
ProductInfo.historyReport.description=Displays a detailed historical report of the product information.
Data.not.present=None

accessibility.needs=Users with accessibility needs can click on the image to obtain status
